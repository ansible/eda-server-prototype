version: '3.9'

services:
  frontend:
    image: eda-frontend
    container_name: eda-frontend
    build:
      context: ../../
      dockerfile: tools/docker/nginx/Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      server:
        condition: service_healthy
  server:
    image: eda-server
    container_name: eda-server
    build:
      context: ../../
      dockerfile: tools/docker/Dockerfile
      args:
        DEVEL_EDA_LIBRARY: ${DEVEL_EDA_LIBRARY:-1}
        GITHUB_TOKEN: $GITHUB_TOKEN
    command:
      [
        "/bin/bash",
        "-c",
        "alembic upgrade head && ansible-events-ui"
      ]
    volumes:
      - ${DOCKER_SOCKET_MOUNT:-/var/run/docker.sock}:/var/run/docker.sock:z
    ports:
      - "9000:9000"
    environment:
      - EDA_HOST=0.0.0.0
      - EDA_DATABASE_URL=postgresql+asyncpg://postgres:secret@postgres/ansible_events
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl -q http://localhost:9000/ping
      interval: 5s
      timeout: 5s
      retries: 10

  wait_for_app:
    image: eda-server
    command: echo app running!
    depends_on:
      server:
        condition: service_healthy

  postgres:
    image: "docker.io/library/postgres:13"
    container_name: eda-postgres
    environment:
      - "POSTGRES_PASSWORD=secret"
      - "POSTGRES_DB=ansible_events"
    ports:
      - "5432:5432"
    volumes:
      - "./postgres/initdb.d:/docker-entrypoint-initdb.d:z"
      - "./postgres/postgresql.conf:/etc/postgresql/postgresql.conf:z"
      - "./postgres/conf.d:/etc/postgresql/conf.d:z"
      - "postgres_data:/var/lib/postgresql/data"
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c log_statement=${PG_LOG_STATEMENT:-mod}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
volumes:
  postgres_data:
