// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RuleBooks should render the RuleBooks component 1`] = `
<ComponentWrapper
  initialEntries={
    Array [
      "/rulebooks",
    ]
  }
>
  <IntlProvider
    defaultFormats={Object {}}
    defaultLocale="en"
    fallbackOnEmptyString={true}
    formats={Object {}}
    locale="en"
    messages={Object {}}
    onError={[Function]}
    onWarn={[Function]}
    textComponent={Symbol(react.fragment)}
  >
    <MemoryRouter
      initialEntries={
        Array [
          "/rulebooks",
        ]
      }
      key="test"
      keyLength={0}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/rulebooks",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/rulebooks",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Route
          path="/rulebooks"
        >
          <RuleBooks>
            <TopToolbar
              paddingBottom={false}
            >
              <PageSection
                variant="light"
              >
                <section
                  className="pf-c-page__main-section pf-m-light"
                >
                  <Title
                    headingLevel="h2"
                  >
                    <h2
                      className="pf-c-title pf-m-xl"
                      data-ouia-component-id="OUIA-Generated-Title-1"
                      data-ouia-component-type="PF4/Title"
                      data-ouia-safe={true}
                    >
                      Rulebooks
                    </h2>
                  </Title>
                </section>
              </PageSection>
            </TopToolbar>
            <PageSection
              id="rulebooks_list"
              page-type="rulebooks-list"
            >
              <section
                className="pf-c-page__main-section"
                id="rulebooks_list"
                page-type="rulebooks-list"
              >
                <TableToolbarView
                  actionResolver={[Function]}
                  columns={
                    Array [
                      Object {
                        "title": "Name",
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      Object {
                        "title": "Number of rulesets",
                      },
                      Object {
                        "title": "Fire count",
                      },
                    ]
                  }
                  fetchData={[Function]}
                  isLoading={false}
                  onFilterChange={[Function]}
                  ouiaId="RuleBooks-table"
                  plural="Rulebooks"
                  renderEmptyState={[Function]}
                  rows={
                    Array [
                      Object {
                        "cells": Array [
                          <React.Fragment>
                            <Link
                              to={
                                Object {
                                  "pathname": "/rulebooks/rulebook/1",
                                }
                              }
                            >
                              RuleBook 1
                            </Link>
                          </React.Fragment>,
                          undefined,
                          undefined,
                        ],
                        "id": "1",
                      },
                      Object {
                        "cells": Array [
                          <React.Fragment>
                            <Link
                              to={
                                Object {
                                  "pathname": "/rulebooks/rulebook/2",
                                }
                              }
                            >
                              RuleBook 2
                            </Link>
                          </React.Fragment>,
                          undefined,
                          undefined,
                        ],
                        "id": "2",
                      },
                      Object {
                        "cells": Array [
                          <React.Fragment>
                            <Link
                              to={
                                Object {
                                  "pathname": "/rulebooks/rulebook/3",
                                }
                              }
                            >
                              RuleBook 3
                            </Link>
                          </React.Fragment>,
                          undefined,
                          undefined,
                        ],
                        "id": "3",
                      },
                    ]
                  }
                  setLimit={[Function]}
                  setOffset={[Function]}
                  singular="Rulebook"
                >
                  <PrimaryToolbar
                    filterConfig={
                      Object {
                        "items": Array [
                          Object {
                            "filterValues": Object {
                              "aria-label": "Search",
                              "id": "search",
                              "onChange": [Function],
                              "placeholder": "Search",
                              "value": undefined,
                            },
                            "label": "Search",
                          },
                        ],
                      }
                    }
                    pagination={
                      Object {
                        "isDisabled": false,
                        "itemCount": 0,
                        "onPerPageSelect": [Function],
                        "onSetPage": [Function],
                        "page": 1,
                        "perPage": 50,
                      }
                    }
                  >
                    <Toolbar
                      className=" ins-c-primary-toolbar"
                      id="ins-primary-data-toolbar"
                      ouiaId="PrimaryToolbar"
                      toggleIsExpanded={[Function]}
                    >
                      <div
                        className="pf-c-toolbar  ins-c-primary-toolbar"
                        data-ouia-component-id="PrimaryToolbar"
                        data-ouia-component-type="PF4/Toolbar"
                        data-ouia-safe={true}
                        id="ins-primary-data-toolbar"
                      >
                        <ToolbarContent
                          isExpanded={false}
                          showClearFiltersButton={false}
                        >
                          <div
                            className="pf-c-toolbar__content"
                          >
                            <div
                              className="pf-c-toolbar__content-section"
                            >
                              <ForwardRef
                                className="ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                                variant="filter-group"
                              >
                                <ToolbarGroupWithRef
                                  className="ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                                  innerRef={null}
                                  variant="filter-group"
                                >
                                  <div
                                    className="pf-c-toolbar__group pf-m-filter-group ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                                  >
                                    <ToolbarItem
                                      className="ins-c-primary-toolbar__filter"
                                    >
                                      <div
                                        className="pf-c-toolbar__item ins-c-primary-toolbar__filter"
                                      >
                                        <ConditionalFilter
                                          items={
                                            Array [
                                              Object {
                                                "filterValues": Object {
                                                  "aria-label": "Search",
                                                  "id": "search",
                                                  "onChange": [Function],
                                                  "placeholder": "Search",
                                                  "value": undefined,
                                                },
                                                "label": "Search",
                                              },
                                            ]
                                          }
                                        >
                                          <Split
                                            className="ins-c-conditional-filter"
                                          >
                                            <div
                                              className="pf-l-split ins-c-conditional-filter"
                                            >
                                              <SplitItem
                                                isFilled={true}
                                              >
                                                <div
                                                  className="pf-l-split__item pf-m-fill"
                                                >
                                                  <TextFilter
                                                    aria-label="Search"
                                                    id="search"
                                                    onChange={[Function]}
                                                    placeholder="Search"
                                                  >
                                                    <TextInput
                                                      aria-label="Search"
                                                      className="ins-c-conditional-filter "
                                                      data-ouia-component-type="PF4/TextInput"
                                                      id="search"
                                                      isDisabled={false}
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      ouiaId="ConditionalFilter"
                                                      placeholder="Search"
                                                      value=""
                                                      widget-type="InsightsInput"
                                                    >
                                                      <TextInputBase
                                                        aria-label="Search"
                                                        className="ins-c-conditional-filter "
                                                        data-ouia-component-type="PF4/TextInput"
                                                        id="search"
                                                        innerRef={null}
                                                        isDisabled={false}
                                                        isIconSprite={false}
                                                        isLeftTruncated={false}
                                                        isReadOnly={false}
                                                        isRequired={false}
                                                        onChange={[Function]}
                                                        onKeyDown={[Function]}
                                                        ouiaId="ConditionalFilter"
                                                        ouiaSafe={true}
                                                        placeholder="Search"
                                                        type="text"
                                                        validated="default"
                                                        value=""
                                                        widget-type="InsightsInput"
                                                      >
                                                        <input
                                                          aria-invalid={false}
                                                          aria-label="Search"
                                                          className="pf-c-form-control ins-c-conditional-filter "
                                                          data-ouia-component-id="ConditionalFilter"
                                                          data-ouia-component-type="PF4/TextInput"
                                                          data-ouia-safe={true}
                                                          disabled={false}
                                                          id="search"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="Search"
                                                          readOnly={false}
                                                          required={false}
                                                          type="text"
                                                          value=""
                                                          widget-type="InsightsInput"
                                                        />
                                                      </TextInputBase>
                                                    </TextInput>
                                                    <SearchIcon
                                                      className="ins-c-search-icon"
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        className="ins-c-search-icon"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                                        />
                                                      </svg>
                                                    </SearchIcon>
                                                  </TextFilter>
                                                </div>
                                              </SplitItem>
                                            </div>
                                          </Split>
                                        </ConditionalFilter>
                                      </div>
                                    </ToolbarItem>
                                  </div>
                                </ToolbarGroupWithRef>
                              </ForwardRef>
                              <ToolbarItem
                                className="ins-c-primary-toolbar__pagination"
                              >
                                <div
                                  className="pf-c-toolbar__item ins-c-primary-toolbar__pagination"
                                >
                                  <Pagination
                                    className=""
                                    defaultToFullPage={false}
                                    firstPage={1}
                                    isCompact={true}
                                    isDisabled={false}
                                    isSticky={false}
                                    itemCount={0}
                                    itemsEnd={null}
                                    itemsStart={null}
                                    offset={0}
                                    onFirstClick={[Function]}
                                    onLastClick={[Function]}
                                    onNextClick={[Function]}
                                    onPageInput={[Function]}
                                    onPerPageSelect={[Function]}
                                    onPreviousClick={[Function]}
                                    onSetPage={[Function]}
                                    ouiaId="CompactPagination"
                                    ouiaSafe={true}
                                    page={1}
                                    perPage={50}
                                    perPageComponent="div"
                                    perPageOptions={
                                      Array [
                                        Object {
                                          "title": "10",
                                          "value": 10,
                                        },
                                        Object {
                                          "title": "20",
                                          "value": 20,
                                        },
                                        Object {
                                          "title": "50",
                                          "value": 50,
                                        },
                                        Object {
                                          "title": "100",
                                          "value": 100,
                                        },
                                      ]
                                    }
                                    titles={
                                      Object {
                                        "currPage": "Current page",
                                        "items": "",
                                        "itemsPerPage": "Items per page",
                                        "ofWord": "of",
                                        "optionsToggle": "",
                                        "page": "",
                                        "pages": "",
                                        "paginationTitle": "Pagination",
                                        "perPageSuffix": "per page",
                                        "toFirstPage": "Go to first page",
                                        "toLastPage": "Go to last page",
                                        "toNextPage": "Go to next page",
                                        "toPreviousPage": "Go to previous page",
                                      }
                                    }
                                    variant="top"
                                    widgetId="pagination-options-menu"
                                  >
                                    <div
                                      className="pf-c-pagination pf-m-compact"
                                      data-ouia-component-id="CompactPagination"
                                      data-ouia-component-type="PF4/Pagination"
                                      data-ouia-safe={true}
                                      id="pagination-options-menu-2"
                                    >
                                      <div
                                        className="pf-c-pagination__total-items"
                                      >
                                        <ToggleTemplate
                                          firstIndex={0}
                                          itemCount={0}
                                          itemsTitle=""
                                          lastIndex={0}
                                          ofWord="of"
                                        >
                                          <b>
                                            0
                                             - 
                                            0
                                          </b>
                                           
                                          of
                                           
                                          <b>
                                            0
                                          </b>
                                           
                                        </ToggleTemplate>
                                      </div>
                                      <PaginationOptionsMenu
                                        className=""
                                        defaultToFullPage={false}
                                        dropDirection="down"
                                        firstIndex={0}
                                        isDisabled={false}
                                        itemCount={0}
                                        itemsPerPageTitle="Items per page"
                                        itemsTitle=""
                                        lastIndex={0}
                                        lastPage={0}
                                        ofWord="of"
                                        onPerPageSelect={[Function]}
                                        optionsToggle=""
                                        page={0}
                                        perPage={50}
                                        perPageComponent="div"
                                        perPageOptions={
                                          Array [
                                            Object {
                                              "title": "10",
                                              "value": 10,
                                            },
                                            Object {
                                              "title": "20",
                                              "value": 20,
                                            },
                                            Object {
                                              "title": "50",
                                              "value": 50,
                                            },
                                            Object {
                                              "title": "100",
                                              "value": 100,
                                            },
                                          ]
                                        }
                                        perPageSuffix="per page"
                                        toggleTemplate={[Function]}
                                        widgetId="pagination-options-menu"
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className=""
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                className=""
                                                component="button"
                                                data-action="per-page-10"
                                                onClick={[Function]}
                                              >
                                                10
                                                 per page
                                              </DropdownItem>,
                                              <DropdownItem
                                                className=""
                                                component="button"
                                                data-action="per-page-20"
                                                onClick={[Function]}
                                              >
                                                20
                                                 per page
                                              </DropdownItem>,
                                              <DropdownItem
                                                className="pf-m-selected"
                                                component="button"
                                                data-action="per-page-50"
                                                onClick={[Function]}
                                              >
                                                50
                                                 per page
                                                <div
                                                  className="pf-c-options-menu__menu-item-icon"
                                                >
                                                  <CheckIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  />
                                                </div>
                                              </DropdownItem>,
                                              <DropdownItem
                                                className=""
                                                component="button"
                                                data-action="per-page-100"
                                                onClick={[Function]}
                                              >
                                                100
                                                 per page
                                              </DropdownItem>,
                                            ]
                                          }
                                          isFlipEnabled={false}
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          isText={false}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="left"
                                          toggle={
                                            <OptionsToggle
                                              firstIndex={0}
                                              isDisabled={false}
                                              isOpen={false}
                                              itemCount={0}
                                              itemsPerPageTitle="Items per page"
                                              itemsTitle=""
                                              lastIndex={0}
                                              ofWord="of"
                                              onToggle={[Function]}
                                              optionsToggle=""
                                              parentRef={null}
                                              perPageComponent="div"
                                              showToggle={true}
                                              toggleTemplate={[Function]}
                                              widgetId="pagination-options-menu"
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-options-menu"
                                            data-ouia-component-type="PF4/PaginationOptionsMenu"
                                            data-ouia-safe={true}
                                          >
                                            <OptionsToggle
                                              aria-haspopup={true}
                                              firstIndex={0}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-2"
                                              isDisabled={false}
                                              isOpen={false}
                                              isPlain={true}
                                              isText={false}
                                              itemCount={0}
                                              itemsPerPageTitle="Items per page"
                                              itemsTitle=""
                                              key=".0"
                                              lastIndex={0}
                                              ofWord="of"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              optionsToggle=""
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-options-menu"
                                                    data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                    data-ouia-safe="true"
                                                  >
                                                    <div
                                                      class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                                    >
                                                      <span
                                                        class="pf-c-options-menu__toggle-text"
                                                      >
                                                        <b>
                                                          0
                                                           - 
                                                          0
                                                        </b>
                                                         
                                                        of
                                                         
                                                        <b>
                                                          0
                                                        </b>
                                                         
                                                        
                                                      </span>
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="listbox"
                                                        aria-label="Items per page"
                                                        class="  pf-c-options-menu__toggle-button"
                                                        data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                        data-ouia-component-type="PF4/DropdownToggle"
                                                        data-ouia-safe="true"
                                                        id="pagination-options-menu-toggle-2"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="pf-c-options-menu__toggle-button-icon"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style="vertical-align: -0.125em;"
                                                            viewBox="0 0 320 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                            />
                                                          </svg>
                                                        </span>
                                                      </button>
                                                    </div>
                                                  </div>,
                                                }
                                              }
                                              perPageComponent="div"
                                              showToggle={true}
                                              toggleTemplate={[Function]}
                                              widgetId="pagination-options-menu"
                                            >
                                              <div
                                                className="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                              >
                                                <span
                                                  className="pf-c-options-menu__toggle-text"
                                                >
                                                  <ToggleTemplate
                                                    firstIndex={0}
                                                    itemCount={0}
                                                    itemsTitle=""
                                                    lastIndex={0}
                                                    ofWord="of"
                                                  >
                                                    <b>
                                                      0
                                                       - 
                                                      0
                                                    </b>
                                                     
                                                    of
                                                     
                                                    <b>
                                                      0
                                                    </b>
                                                     
                                                  </ToggleTemplate>
                                                </span>
                                                <DropdownToggle
                                                  aria-haspopup="listbox"
                                                  aria-label="Items per page"
                                                  className="pf-c-options-menu__toggle-button"
                                                  id="pagination-options-menu-toggle-2"
                                                  isDisabled={0}
                                                  isOpen={false}
                                                  onEnter={[Function]}
                                                  onToggle={[Function]}
                                                  parentRef={
                                                    Object {
                                                      "current": <div
                                                        class="pf-c-options-menu"
                                                        data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                        data-ouia-safe="true"
                                                      >
                                                        <div
                                                          class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                                        >
                                                          <span
                                                            class="pf-c-options-menu__toggle-text"
                                                          >
                                                            <b>
                                                              0
                                                               - 
                                                              0
                                                            </b>
                                                             
                                                            of
                                                             
                                                            <b>
                                                              0
                                                            </b>
                                                             
                                                            
                                                          </span>
                                                          <button
                                                            aria-expanded="false"
                                                            aria-haspopup="listbox"
                                                            aria-label="Items per page"
                                                            class="  pf-c-options-menu__toggle-button"
                                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                            data-ouia-component-type="PF4/DropdownToggle"
                                                            data-ouia-safe="true"
                                                            id="pagination-options-menu-toggle-2"
                                                            type="button"
                                                          >
                                                            <span
                                                              class="pf-c-options-menu__toggle-button-icon"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style="vertical-align: -0.125em;"
                                                                viewBox="0 0 320 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                />
                                                              </svg>
                                                            </span>
                                                          </button>
                                                        </div>
                                                      </div>,
                                                    }
                                                  }
                                                >
                                                  <Toggle
                                                    aria-haspopup="listbox"
                                                    aria-label="Items per page"
                                                    bubbleEvent={false}
                                                    className="pf-c-options-menu__toggle-button"
                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                    data-ouia-safe={true}
                                                    getMenuRef={null}
                                                    id="pagination-options-menu-toggle-2"
                                                    isActive={false}
                                                    isDisabled={0}
                                                    isOpen={false}
                                                    isPlain={false}
                                                    isPrimary={false}
                                                    isSplitButton={false}
                                                    isText={false}
                                                    onEnter={[Function]}
                                                    onToggle={[Function]}
                                                    parentRef={
                                                      Object {
                                                        "current": <div
                                                          class="pf-c-options-menu"
                                                          data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                          data-ouia-safe="true"
                                                        >
                                                          <div
                                                            class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                                          >
                                                            <span
                                                              class="pf-c-options-menu__toggle-text"
                                                            >
                                                              <b>
                                                                0
                                                                 - 
                                                                0
                                                              </b>
                                                               
                                                              of
                                                               
                                                              <b>
                                                                0
                                                              </b>
                                                               
                                                              
                                                            </span>
                                                            <button
                                                              aria-expanded="false"
                                                              aria-haspopup="listbox"
                                                              aria-label="Items per page"
                                                              class="  pf-c-options-menu__toggle-button"
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                              data-ouia-component-type="PF4/DropdownToggle"
                                                              data-ouia-safe="true"
                                                              id="pagination-options-menu-toggle-2"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="pf-c-options-menu__toggle-button-icon"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style="vertical-align: -0.125em;"
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                  />
                                                                </svg>
                                                              </span>
                                                            </button>
                                                          </div>
                                                        </div>,
                                                      }
                                                    }
                                                    toggleVariant="default"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-label="Items per page"
                                                      className="  pf-c-options-menu__toggle-button"
                                                      data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                      data-ouia-component-type="PF4/DropdownToggle"
                                                      data-ouia-safe={true}
                                                      disabled={0}
                                                      id="pagination-options-menu-toggle-2"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="button"
                                                    >
                                                      <span
                                                        className="pf-c-options-menu__toggle-button-icon"
                                                      >
                                                        <CaretDownIcon
                                                          color="currentColor"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={null}
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style={
                                                              Object {
                                                                "verticalAlign": "-0.125em",
                                                              }
                                                            }
                                                            viewBox="0 0 320 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                            />
                                                          </svg>
                                                        </CaretDownIcon>
                                                      </span>
                                                    </button>
                                                  </Toggle>
                                                </DropdownToggle>
                                              </div>
                                            </OptionsToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </PaginationOptionsMenu>
                                      <Navigation
                                        className=""
                                        currPage="Current page"
                                        firstPage={1}
                                        isCompact={true}
                                        isDisabled={false}
                                        itemCount={0}
                                        lastPage={0}
                                        ofWord="of"
                                        onFirstClick={[Function]}
                                        onLastClick={[Function]}
                                        onNextClick={[Function]}
                                        onPageInput={[Function]}
                                        onPreviousClick={[Function]}
                                        onSetPage={[Function]}
                                        page={0}
                                        pagesTitle=""
                                        pagesTitlePlural=""
                                        paginationTitle="Pagination"
                                        perPage={50}
                                        toFirstPage="Go to first page"
                                        toLastPage="Go to last page"
                                        toNextPage="Go to next page"
                                        toPreviousPage="Go to previous page"
                                      >
                                        <nav
                                          aria-label="Pagination"
                                          className="pf-c-pagination__nav"
                                        >
                                          <div
                                            className="pf-c-pagination__nav-control"
                                          >
                                            <Button
                                              aria-label="Go to previous page"
                                              data-action="previous"
                                              isDisabled={true}
                                              onClick={[Function]}
                                              variant="plain"
                                            >
                                              <ButtonBase
                                                aria-label="Go to previous page"
                                                data-action="previous"
                                                innerRef={null}
                                                isDisabled={true}
                                                onClick={[Function]}
                                                variant="plain"
                                              >
                                                <button
                                                  aria-disabled={true}
                                                  aria-label="Go to previous page"
                                                  className="pf-c-button pf-m-plain pf-m-disabled"
                                                  data-action="previous"
                                                  data-ouia-component-id="OUIA-Generated-Button-plain-3"
                                                  data-ouia-component-type="PF4/Button"
                                                  data-ouia-safe={true}
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  role={null}
                                                  tabIndex={null}
                                                  type="button"
                                                >
                                                  <AngleLeftIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                                                      />
                                                    </svg>
                                                  </AngleLeftIcon>
                                                </button>
                                              </ButtonBase>
                                            </Button>
                                          </div>
                                          <div
                                            className="pf-c-pagination__nav-control"
                                          >
                                            <Button
                                              aria-label="Go to next page"
                                              data-action="next"
                                              isDisabled={true}
                                              onClick={[Function]}
                                              variant="plain"
                                            >
                                              <ButtonBase
                                                aria-label="Go to next page"
                                                data-action="next"
                                                innerRef={null}
                                                isDisabled={true}
                                                onClick={[Function]}
                                                variant="plain"
                                              >
                                                <button
                                                  aria-disabled={true}
                                                  aria-label="Go to next page"
                                                  className="pf-c-button pf-m-plain pf-m-disabled"
                                                  data-action="next"
                                                  data-ouia-component-id="OUIA-Generated-Button-plain-4"
                                                  data-ouia-component-type="PF4/Button"
                                                  data-ouia-safe={true}
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  role={null}
                                                  tabIndex={null}
                                                  type="button"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </button>
                                              </ButtonBase>
                                            </Button>
                                          </div>
                                        </nav>
                                      </Navigation>
                                    </div>
                                  </Pagination>
                                </div>
                              </ToolbarItem>
                            </div>
                            <ToolbarExpandableContent
                              chipContainerRef={
                                Object {
                                  "current": null,
                                }
                              }
                              clearFiltersButtonText="Clear all filters"
                              expandableContentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-toolbar__expandable-content"
                                    id="ins-primary-data-toolbar-expandable-content-2"
                                  >
                                    <div
                                      class="pf-c-toolbar__group"
                                    />
                                  </div>,
                                }
                              }
                              id="ins-primary-data-toolbar-expandable-content-2"
                              isExpanded={false}
                              showClearFiltersButton={false}
                            >
                              <div
                                className="pf-c-toolbar__expandable-content"
                                id="ins-primary-data-toolbar-expandable-content-2"
                              >
                                <ForwardRef>
                                  <ToolbarGroupWithRef
                                    innerRef={null}
                                  >
                                    <div
                                      className="pf-c-toolbar__group"
                                    />
                                  </ToolbarGroupWithRef>
                                </ForwardRef>
                              </div>
                            </ToolbarExpandableContent>
                          </div>
                        </ToolbarContent>
                        <ToolbarChipGroupContent
                          chipGroupContentRef={
                            Object {
                              "current": <div
                                class="pf-c-toolbar__content pf-m-hidden"
                                hidden=""
                              >
                                <div
                                  class="pf-c-toolbar__group"
                                />
                              </div>,
                            }
                          }
                          clearFiltersButtonText="Clear all filters"
                          collapseListedFiltersBreakpoint="lg"
                          numberOfFilters={0}
                          numberOfFiltersText={[Function]}
                          showClearFiltersButton={false}
                        >
                          <div
                            className="pf-c-toolbar__content pf-m-hidden"
                            hidden={true}
                          >
                            <ForwardRef
                              className=""
                            >
                              <ToolbarGroupWithRef
                                className=""
                                innerRef={null}
                              >
                                <div
                                  className="pf-c-toolbar__group"
                                />
                              </ToolbarGroupWithRef>
                            </ForwardRef>
                          </div>
                        </ToolbarChipGroupContent>
                      </div>
                    </Toolbar>
                  </PrimaryToolbar>
                  <Table
                    actionResolver={[Function]}
                    aria-label="Rulebooks table"
                    borders={true}
                    canCollapseAll={false}
                    canSelectAll={true}
                    canSortFavorites={true}
                    cells={
                      Array [
                        Object {
                          "title": "Name",
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        Object {
                          "title": "Number of rulesets",
                        },
                        Object {
                          "title": "Fire count",
                        },
                      ]
                    }
                    className="pf-u-pt-0"
                    collapseAllAriaLabel=""
                    contentId="expanded-content"
                    dropdownDirection="down"
                    dropdownPosition="right"
                    expandId="expandable-toggle"
                    gridBreakPoint="grid-md"
                    isHeaderSelectDisabled={false}
                    isNested={false}
                    isStickyHeader={false}
                    isTreeTable={false}
                    ouiaId="RuleBooks-table"
                    ouiaSafe={true}
                    role="grid"
                    rowLabeledBy="simple-node"
                    rows={
                      Array [
                        Object {
                          "cells": Array [
                            <React.Fragment>
                              <Link
                                to={
                                  Object {
                                    "pathname": "/rulebooks/rulebook/1",
                                  }
                                }
                              >
                                RuleBook 1
                              </Link>
                            </React.Fragment>,
                            undefined,
                            undefined,
                          ],
                          "id": "1",
                        },
                        Object {
                          "cells": Array [
                            <React.Fragment>
                              <Link
                                to={
                                  Object {
                                    "pathname": "/rulebooks/rulebook/2",
                                  }
                                }
                              >
                                RuleBook 2
                              </Link>
                            </React.Fragment>,
                            undefined,
                            undefined,
                          ],
                          "id": "2",
                        },
                        Object {
                          "cells": Array [
                            <React.Fragment>
                              <Link
                                to={
                                  Object {
                                    "pathname": "/rulebooks/rulebook/3",
                                  }
                                }
                              >
                                RuleBook 3
                              </Link>
                            </React.Fragment>,
                            undefined,
                            undefined,
                          ],
                          "id": "3",
                        },
                      ]
                    }
                    selectVariant="checkbox"
                    variant={null}
                  >
                    <Provider
                      aria-label="Rulebooks table"
                      borders={true}
                      className="pf-u-pt-0"
                      columns={
                        Array [
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": [Function],
                              "actions": undefined,
                              "actionsToggle": undefined,
                              "allRowsExpanded": false,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "canCollapseAll": false,
                              "canSelectAll": true,
                              "canSortFavorites": true,
                              "collapseAllAriaLabel": "",
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "isHeaderSelectDisabled": false,
                              "onCollapse": undefined,
                              "onExpand": undefined,
                              "onFavorite": undefined,
                              "onRowEdit": undefined,
                              "onSelect": undefined,
                              "onSort": undefined,
                              "rowLabeledBy": "simple-node",
                              "selectVariant": "checkbox",
                              "sortBy": undefined,
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Name",
                              "transforms": Array [
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "name",
                            "props": Object {
                              "data-key": 0,
                              "data-label": "Name",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": [Function],
                              "actions": undefined,
                              "actionsToggle": undefined,
                              "allRowsExpanded": false,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "canCollapseAll": false,
                              "canSelectAll": true,
                              "canSortFavorites": true,
                              "collapseAllAriaLabel": "",
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "isHeaderSelectDisabled": false,
                              "onCollapse": undefined,
                              "onExpand": undefined,
                              "onFavorite": undefined,
                              "onRowEdit": undefined,
                              "onSelect": undefined,
                              "onSort": undefined,
                              "rowLabeledBy": "simple-node",
                              "selectVariant": "checkbox",
                              "sortBy": undefined,
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Number of rulesets",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "number-of-rulesets",
                            "props": Object {
                              "data-key": 1,
                              "data-label": "Number of rulesets",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": [Function],
                              "actions": undefined,
                              "actionsToggle": undefined,
                              "allRowsExpanded": false,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "canCollapseAll": false,
                              "canSelectAll": true,
                              "canSortFavorites": true,
                              "collapseAllAriaLabel": "",
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "isHeaderSelectDisabled": false,
                              "onCollapse": undefined,
                              "onExpand": undefined,
                              "onFavorite": undefined,
                              "onRowEdit": undefined,
                              "onSelect": undefined,
                              "onSort": undefined,
                              "rowLabeledBy": "simple-node",
                              "selectVariant": "checkbox",
                              "sortBy": undefined,
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Fire count",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "fire-count",
                            "props": Object {
                              "data-key": 2,
                              "data-label": "Fire count",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": [Function],
                              "actions": undefined,
                              "actionsToggle": undefined,
                              "allRowsExpanded": false,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "canCollapseAll": false,
                              "canSelectAll": true,
                              "canSortFavorites": true,
                              "collapseAllAriaLabel": "",
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "isHeaderSelectDisabled": false,
                              "onCollapse": undefined,
                              "onExpand": undefined,
                              "onFavorite": undefined,
                              "onRowEdit": undefined,
                              "onSelect": undefined,
                              "onSort": undefined,
                              "rowLabeledBy": "simple-node",
                              "selectVariant": "checkbox",
                              "sortBy": undefined,
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "",
                              "transforms": Array [
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-3",
                            "props": Object {
                              "data-key": 3,
                              "data-label": "",
                            },
                          },
                        ]
                      }
                      gridBreakPoint="grid-md"
                      isNested={false}
                      isStickyHeader={false}
                      isTreeTable={false}
                      ouiaId="RuleBooks-table"
                      ouiaSafe={true}
                      renderers={
                        Object {
                          "body": Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          },
                          "header": Object {
                            "cell": [Function],
                          },
                        }
                      }
                      role="grid"
                      variant={null}
                    >
                      <TableComposable
                        aria-label="Rulebooks table"
                        borders={true}
                        className="pf-u-pt-0"
                        gridBreakPoint="grid-md"
                        isNested={false}
                        isStickyHeader={false}
                        isTreeTable={false}
                        ouiaId="RuleBooks-table"
                        ouiaSafe={true}
                        role="grid"
                        variant={null}
                      >
                        <TableComposableBase
                          aria-label="Rulebooks table"
                          borders={true}
                          className="pf-u-pt-0"
                          gridBreakPoint="grid-md"
                          innerRef={null}
                          isNested={false}
                          isStickyHeader={false}
                          isTreeTable={false}
                          ouiaId="RuleBooks-table"
                          ouiaSafe={true}
                          role="grid"
                          variant={null}
                        >
                          <table
                            aria-label="Rulebooks table"
                            className="pf-u-pt-0 pf-c-table pf-m-grid-md"
                            data-ouia-component-id="RuleBooks-table"
                            data-ouia-component-type="PF4/Table"
                            data-ouia-safe={true}
                            role="grid"
                          >
                            <TableHeader>
                              <ContextHeader
                                headerRows={null}
                              >
                                <Header
                                  className=""
                                  headerRows={null}
                                >
                                  <BaseHeader
                                    className=""
                                    columns={
                                      Array [
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": [Function],
                                            "actions": undefined,
                                            "actionsToggle": undefined,
                                            "allRowsExpanded": false,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canCollapseAll": false,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "collapseAllAriaLabel": "",
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "isHeaderSelectDisabled": false,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Name",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "name",
                                          "props": Object {
                                            "data-key": 0,
                                            "data-label": "Name",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": [Function],
                                            "actions": undefined,
                                            "actionsToggle": undefined,
                                            "allRowsExpanded": false,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canCollapseAll": false,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "collapseAllAriaLabel": "",
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "isHeaderSelectDisabled": false,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Number of rulesets",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "number-of-rulesets",
                                          "props": Object {
                                            "data-key": 1,
                                            "data-label": "Number of rulesets",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": [Function],
                                            "actions": undefined,
                                            "actionsToggle": undefined,
                                            "allRowsExpanded": false,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canCollapseAll": false,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "collapseAllAriaLabel": "",
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "isHeaderSelectDisabled": false,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Fire count",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "fire-count",
                                          "props": Object {
                                            "data-key": 2,
                                            "data-label": "Fire count",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": [Function],
                                            "actions": undefined,
                                            "actionsToggle": undefined,
                                            "allRowsExpanded": false,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canCollapseAll": false,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "collapseAllAriaLabel": "",
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "isHeaderSelectDisabled": false,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "column-3",
                                          "props": Object {
                                            "data-key": 3,
                                            "data-label": "",
                                          },
                                        },
                                      ]
                                    }
                                    headerRows={null}
                                    renderers={
                                      Object {
                                        "body": Object {
                                          "cell": [Function],
                                          "row": [Function],
                                          "wrapper": [Function],
                                        },
                                        "header": Object {
                                          "cell": [Function],
                                          "row": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                          "wrapper": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "table": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      }
                                    }
                                  >
                                    <Thead
                                      className=""
                                    >
                                      <TheadBase
                                        className=""
                                        innerRef={null}
                                      >
                                        <thead
                                          className=""
                                        >
                                          <HeaderRow
                                            key="0-header-row"
                                            renderers={
                                              Object {
                                                "cell": [Function],
                                                "row": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "wrapper": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              }
                                            }
                                            rowData={
                                              Array [
                                                Object {
                                                  "cell": Object {
                                                    "formatters": Array [
                                                      [Function],
                                                    ],
                                                    "transforms": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "data": undefined,
                                                  "extraParams": Object {
                                                    "actionResolver": [Function],
                                                    "actions": undefined,
                                                    "actionsToggle": undefined,
                                                    "allRowsExpanded": false,
                                                    "allRowsSelected": false,
                                                    "areActionsDisabled": undefined,
                                                    "canCollapseAll": false,
                                                    "canSelectAll": true,
                                                    "canSortFavorites": true,
                                                    "collapseAllAriaLabel": "",
                                                    "contentId": "expanded-content",
                                                    "dropdownDirection": "down",
                                                    "dropdownPosition": "right",
                                                    "expandId": "expandable-toggle",
                                                    "firstUserColumnIndex": 0,
                                                    "isHeaderSelectDisabled": false,
                                                    "onCollapse": undefined,
                                                    "onExpand": undefined,
                                                    "onFavorite": undefined,
                                                    "onRowEdit": undefined,
                                                    "onSelect": undefined,
                                                    "onSort": undefined,
                                                    "rowLabeledBy": "simple-node",
                                                    "selectVariant": "checkbox",
                                                    "sortBy": undefined,
                                                  },
                                                  "header": Object {
                                                    "formatters": Array [],
                                                    "label": "Name",
                                                    "transforms": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "property": "name",
                                                  "props": Object {
                                                    "data-key": 0,
                                                    "data-label": "Name",
                                                  },
                                                },
                                                Object {
                                                  "cell": Object {
                                                    "formatters": Array [
                                                      [Function],
                                                    ],
                                                    "transforms": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "data": undefined,
                                                  "extraParams": Object {
                                                    "actionResolver": [Function],
                                                    "actions": undefined,
                                                    "actionsToggle": undefined,
                                                    "allRowsExpanded": false,
                                                    "allRowsSelected": false,
                                                    "areActionsDisabled": undefined,
                                                    "canCollapseAll": false,
                                                    "canSelectAll": true,
                                                    "canSortFavorites": true,
                                                    "collapseAllAriaLabel": "",
                                                    "contentId": "expanded-content",
                                                    "dropdownDirection": "down",
                                                    "dropdownPosition": "right",
                                                    "expandId": "expandable-toggle",
                                                    "firstUserColumnIndex": 0,
                                                    "isHeaderSelectDisabled": false,
                                                    "onCollapse": undefined,
                                                    "onExpand": undefined,
                                                    "onFavorite": undefined,
                                                    "onRowEdit": undefined,
                                                    "onSelect": undefined,
                                                    "onSort": undefined,
                                                    "rowLabeledBy": "simple-node",
                                                    "selectVariant": "checkbox",
                                                    "sortBy": undefined,
                                                  },
                                                  "header": Object {
                                                    "formatters": Array [],
                                                    "label": "Number of rulesets",
                                                    "transforms": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "property": "number-of-rulesets",
                                                  "props": Object {
                                                    "data-key": 1,
                                                    "data-label": "Number of rulesets",
                                                  },
                                                },
                                                Object {
                                                  "cell": Object {
                                                    "formatters": Array [
                                                      [Function],
                                                    ],
                                                    "transforms": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "data": undefined,
                                                  "extraParams": Object {
                                                    "actionResolver": [Function],
                                                    "actions": undefined,
                                                    "actionsToggle": undefined,
                                                    "allRowsExpanded": false,
                                                    "allRowsSelected": false,
                                                    "areActionsDisabled": undefined,
                                                    "canCollapseAll": false,
                                                    "canSelectAll": true,
                                                    "canSortFavorites": true,
                                                    "collapseAllAriaLabel": "",
                                                    "contentId": "expanded-content",
                                                    "dropdownDirection": "down",
                                                    "dropdownPosition": "right",
                                                    "expandId": "expandable-toggle",
                                                    "firstUserColumnIndex": 0,
                                                    "isHeaderSelectDisabled": false,
                                                    "onCollapse": undefined,
                                                    "onExpand": undefined,
                                                    "onFavorite": undefined,
                                                    "onRowEdit": undefined,
                                                    "onSelect": undefined,
                                                    "onSort": undefined,
                                                    "rowLabeledBy": "simple-node",
                                                    "selectVariant": "checkbox",
                                                    "sortBy": undefined,
                                                  },
                                                  "header": Object {
                                                    "formatters": Array [],
                                                    "label": "Fire count",
                                                    "transforms": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "property": "fire-count",
                                                  "props": Object {
                                                    "data-key": 2,
                                                    "data-label": "Fire count",
                                                  },
                                                },
                                                Object {
                                                  "cell": Object {
                                                    "formatters": Array [
                                                      [Function],
                                                    ],
                                                    "transforms": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "data": undefined,
                                                  "extraParams": Object {
                                                    "actionResolver": [Function],
                                                    "actions": undefined,
                                                    "actionsToggle": undefined,
                                                    "allRowsExpanded": false,
                                                    "allRowsSelected": false,
                                                    "areActionsDisabled": undefined,
                                                    "canCollapseAll": false,
                                                    "canSelectAll": true,
                                                    "canSortFavorites": true,
                                                    "collapseAllAriaLabel": "",
                                                    "contentId": "expanded-content",
                                                    "dropdownDirection": "down",
                                                    "dropdownPosition": "right",
                                                    "expandId": "expandable-toggle",
                                                    "firstUserColumnIndex": 0,
                                                    "isHeaderSelectDisabled": false,
                                                    "onCollapse": undefined,
                                                    "onExpand": undefined,
                                                    "onFavorite": undefined,
                                                    "onRowEdit": undefined,
                                                    "onSelect": undefined,
                                                    "onSort": undefined,
                                                    "rowLabeledBy": "simple-node",
                                                    "selectVariant": "checkbox",
                                                    "sortBy": undefined,
                                                  },
                                                  "header": Object {
                                                    "formatters": Array [],
                                                    "label": "",
                                                    "transforms": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "property": "column-3",
                                                  "props": Object {
                                                    "data-key": 3,
                                                    "data-label": "",
                                                  },
                                                },
                                              ]
                                            }
                                            rowIndex={0}
                                          >
                                            <Tr>
                                              <TrBase
                                                innerRef={null}
                                              >
                                                <tr
                                                  className=""
                                                  data-ouia-component-id="OUIA-Generated-TableRow-1"
                                                  data-ouia-component-type="PF4/TableRow"
                                                  data-ouia-safe={true}
                                                  hidden={false}
                                                >
                                                  <HeaderCell
                                                    className="pf-m-width-50"
                                                    data-key={0}
                                                    data-label="Name"
                                                    key="0-header"
                                                    scope="col"
                                                  >
                                                    <Th
                                                      className="pf-m-width-50"
                                                      component="th"
                                                      data-key={0}
                                                      data-label="Name"
                                                      onMouseEnter={[Function]}
                                                      scope="col"
                                                      textCenter={false}
                                                      tooltip=""
                                                    >
                                                      <ThBase
                                                        className="pf-m-width-50"
                                                        component="th"
                                                        data-key={0}
                                                        data-label="Name"
                                                        innerRef={null}
                                                        onMouseEnter={[Function]}
                                                        scope="col"
                                                        textCenter={false}
                                                        tooltip=""
                                                      >
                                                        <th
                                                          className="pf-m-width-50"
                                                          data-key={0}
                                                          data-label="Name"
                                                          onMouseEnter={[Function]}
                                                          scope="col"
                                                        >
                                                          Name
                                                        </th>
                                                      </ThBase>
                                                    </Th>
                                                  </HeaderCell>
                                                  <HeaderCell
                                                    data-key={1}
                                                    data-label="Number of rulesets"
                                                    key="1-header"
                                                    scope="col"
                                                  >
                                                    <Th
                                                      className=""
                                                      component="th"
                                                      data-key={1}
                                                      data-label="Number of rulesets"
                                                      onMouseEnter={[Function]}
                                                      scope="col"
                                                      textCenter={false}
                                                      tooltip=""
                                                    >
                                                      <ThBase
                                                        className=""
                                                        component="th"
                                                        data-key={1}
                                                        data-label="Number of rulesets"
                                                        innerRef={null}
                                                        onMouseEnter={[Function]}
                                                        scope="col"
                                                        textCenter={false}
                                                        tooltip=""
                                                      >
                                                        <th
                                                          className=""
                                                          data-key={1}
                                                          data-label="Number of rulesets"
                                                          onMouseEnter={[Function]}
                                                          scope="col"
                                                        >
                                                          Number of rulesets
                                                        </th>
                                                      </ThBase>
                                                    </Th>
                                                  </HeaderCell>
                                                  <HeaderCell
                                                    data-key={2}
                                                    data-label="Fire count"
                                                    key="2-header"
                                                    scope="col"
                                                  >
                                                    <Th
                                                      className=""
                                                      component="th"
                                                      data-key={2}
                                                      data-label="Fire count"
                                                      onMouseEnter={[Function]}
                                                      scope="col"
                                                      textCenter={false}
                                                      tooltip=""
                                                    >
                                                      <ThBase
                                                        className=""
                                                        component="th"
                                                        data-key={2}
                                                        data-label="Fire count"
                                                        innerRef={null}
                                                        onMouseEnter={[Function]}
                                                        scope="col"
                                                        textCenter={false}
                                                        tooltip=""
                                                      >
                                                        <th
                                                          className=""
                                                          data-key={2}
                                                          data-label="Fire count"
                                                          onMouseEnter={[Function]}
                                                          scope="col"
                                                        >
                                                          Fire count
                                                        </th>
                                                      </ThBase>
                                                    </Th>
                                                  </HeaderCell>
                                                  <HeaderCell
                                                    component="td"
                                                    data-key={3}
                                                    data-label=""
                                                    key="3-header"
                                                    scope=""
                                                  >
                                                    <Th
                                                      className=""
                                                      component="td"
                                                      data-key={3}
                                                      data-label=""
                                                      onMouseEnter={[Function]}
                                                      scope=""
                                                      textCenter={false}
                                                      tooltip=""
                                                    >
                                                      <ThBase
                                                        className=""
                                                        component="td"
                                                        data-key={3}
                                                        data-label=""
                                                        innerRef={null}
                                                        onMouseEnter={[Function]}
                                                        scope=""
                                                        textCenter={false}
                                                        tooltip=""
                                                      >
                                                        <td
                                                          className=""
                                                          data-key={3}
                                                          data-label=""
                                                          onMouseEnter={[Function]}
                                                          scope={null}
                                                        />
                                                      </ThBase>
                                                    </Th>
                                                  </HeaderCell>
                                                </tr>
                                              </TrBase>
                                            </Tr>
                                          </HeaderRow>
                                        </thead>
                                      </TheadBase>
                                    </Thead>
                                  </BaseHeader>
                                </Header>
                              </ContextHeader>
                            </TableHeader>
                            <TableBody>
                              <ContextBody
                                className=""
                                headerData={
                                  Array [
                                    Object {
                                      "cell": Object {
                                        "formatters": Array [
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                      "data": undefined,
                                      "extraParams": Object {
                                        "actionResolver": [Function],
                                        "actions": undefined,
                                        "actionsToggle": undefined,
                                        "allRowsExpanded": false,
                                        "allRowsSelected": false,
                                        "areActionsDisabled": undefined,
                                        "canCollapseAll": false,
                                        "canSelectAll": true,
                                        "canSortFavorites": true,
                                        "collapseAllAriaLabel": "",
                                        "contentId": "expanded-content",
                                        "dropdownDirection": "down",
                                        "dropdownPosition": "right",
                                        "expandId": "expandable-toggle",
                                        "firstUserColumnIndex": 0,
                                        "isHeaderSelectDisabled": false,
                                        "onCollapse": undefined,
                                        "onExpand": undefined,
                                        "onFavorite": undefined,
                                        "onRowEdit": undefined,
                                        "onSelect": undefined,
                                        "onSort": undefined,
                                        "rowLabeledBy": "simple-node",
                                        "selectVariant": "checkbox",
                                        "sortBy": undefined,
                                      },
                                      "header": Object {
                                        "formatters": Array [],
                                        "label": "Name",
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "property": "name",
                                      "props": Object {
                                        "data-key": 0,
                                        "data-label": "Name",
                                      },
                                    },
                                    Object {
                                      "cell": Object {
                                        "formatters": Array [
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                      "data": undefined,
                                      "extraParams": Object {
                                        "actionResolver": [Function],
                                        "actions": undefined,
                                        "actionsToggle": undefined,
                                        "allRowsExpanded": false,
                                        "allRowsSelected": false,
                                        "areActionsDisabled": undefined,
                                        "canCollapseAll": false,
                                        "canSelectAll": true,
                                        "canSortFavorites": true,
                                        "collapseAllAriaLabel": "",
                                        "contentId": "expanded-content",
                                        "dropdownDirection": "down",
                                        "dropdownPosition": "right",
                                        "expandId": "expandable-toggle",
                                        "firstUserColumnIndex": 0,
                                        "isHeaderSelectDisabled": false,
                                        "onCollapse": undefined,
                                        "onExpand": undefined,
                                        "onFavorite": undefined,
                                        "onRowEdit": undefined,
                                        "onSelect": undefined,
                                        "onSort": undefined,
                                        "rowLabeledBy": "simple-node",
                                        "selectVariant": "checkbox",
                                        "sortBy": undefined,
                                      },
                                      "header": Object {
                                        "formatters": Array [],
                                        "label": "Number of rulesets",
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "property": "number-of-rulesets",
                                      "props": Object {
                                        "data-key": 1,
                                        "data-label": "Number of rulesets",
                                      },
                                    },
                                    Object {
                                      "cell": Object {
                                        "formatters": Array [
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                      "data": undefined,
                                      "extraParams": Object {
                                        "actionResolver": [Function],
                                        "actions": undefined,
                                        "actionsToggle": undefined,
                                        "allRowsExpanded": false,
                                        "allRowsSelected": false,
                                        "areActionsDisabled": undefined,
                                        "canCollapseAll": false,
                                        "canSelectAll": true,
                                        "canSortFavorites": true,
                                        "collapseAllAriaLabel": "",
                                        "contentId": "expanded-content",
                                        "dropdownDirection": "down",
                                        "dropdownPosition": "right",
                                        "expandId": "expandable-toggle",
                                        "firstUserColumnIndex": 0,
                                        "isHeaderSelectDisabled": false,
                                        "onCollapse": undefined,
                                        "onExpand": undefined,
                                        "onFavorite": undefined,
                                        "onRowEdit": undefined,
                                        "onSelect": undefined,
                                        "onSort": undefined,
                                        "rowLabeledBy": "simple-node",
                                        "selectVariant": "checkbox",
                                        "sortBy": undefined,
                                      },
                                      "header": Object {
                                        "formatters": Array [],
                                        "label": "Fire count",
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "property": "fire-count",
                                      "props": Object {
                                        "data-key": 2,
                                        "data-label": "Fire count",
                                      },
                                    },
                                    Object {
                                      "cell": Object {
                                        "formatters": Array [
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "data": undefined,
                                      "extraParams": Object {
                                        "actionResolver": [Function],
                                        "actions": undefined,
                                        "actionsToggle": undefined,
                                        "allRowsExpanded": false,
                                        "allRowsSelected": false,
                                        "areActionsDisabled": undefined,
                                        "canCollapseAll": false,
                                        "canSelectAll": true,
                                        "canSortFavorites": true,
                                        "collapseAllAriaLabel": "",
                                        "contentId": "expanded-content",
                                        "dropdownDirection": "down",
                                        "dropdownPosition": "right",
                                        "expandId": "expandable-toggle",
                                        "firstUserColumnIndex": 0,
                                        "isHeaderSelectDisabled": false,
                                        "onCollapse": undefined,
                                        "onExpand": undefined,
                                        "onFavorite": undefined,
                                        "onRowEdit": undefined,
                                        "onSelect": undefined,
                                        "onSort": undefined,
                                        "rowLabeledBy": "simple-node",
                                        "selectVariant": "checkbox",
                                        "sortBy": undefined,
                                      },
                                      "header": Object {
                                        "formatters": Array [],
                                        "label": "",
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "property": "column-3",
                                      "props": Object {
                                        "data-key": 3,
                                        "data-label": "",
                                      },
                                    },
                                  ]
                                }
                                headerRows={null}
                                onRow={[Function]}
                                onRowClick={[Function]}
                                rowKey="secretTableRowKeyId"
                                rows={
                                  Array [
                                    Object {
                                      "cells": Array [
                                        <React.Fragment>
                                          <Link
                                            to={
                                              Object {
                                                "pathname": "/rulebooks/rulebook/1",
                                              }
                                            }
                                          >
                                            RuleBook 1
                                          </Link>
                                        </React.Fragment>,
                                        undefined,
                                        undefined,
                                      ],
                                      "id": "1",
                                    },
                                    Object {
                                      "cells": Array [
                                        <React.Fragment>
                                          <Link
                                            to={
                                              Object {
                                                "pathname": "/rulebooks/rulebook/2",
                                              }
                                            }
                                          >
                                            RuleBook 2
                                          </Link>
                                        </React.Fragment>,
                                        undefined,
                                        undefined,
                                      ],
                                      "id": "2",
                                    },
                                    Object {
                                      "cells": Array [
                                        <React.Fragment>
                                          <Link
                                            to={
                                              Object {
                                                "pathname": "/rulebooks/rulebook/3",
                                              }
                                            }
                                          >
                                            RuleBook 3
                                          </Link>
                                        </React.Fragment>,
                                        undefined,
                                        undefined,
                                      ],
                                      "id": "3",
                                    },
                                  ]
                                }
                              >
                                <Body
                                  className=""
                                  headerRows={null}
                                  mappedRows={
                                    Array [
                                      Object {
                                        "cells": Array [
                                          <React.Fragment>
                                            <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/1",
                                                }
                                              }
                                            >
                                              RuleBook 1
                                            </Link>
                                          </React.Fragment>,
                                          undefined,
                                          undefined,
                                        ],
                                        "fire-count": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "id": "1",
                                        "isExpanded": undefined,
                                        "isFirst": true,
                                        "isFirstVisible": true,
                                        "isHeightAuto": false,
                                        "isLast": false,
                                        "isLastVisible": false,
                                        "name": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "children": <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/1",
                                                }
                                              }
                                            >
                                              RuleBook 1
                                            </Link>,
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "number-of-rulesets": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "secretTableRowKeyId": "1",
                                      },
                                      Object {
                                        "cells": Array [
                                          <React.Fragment>
                                            <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/2",
                                                }
                                              }
                                            >
                                              RuleBook 2
                                            </Link>
                                          </React.Fragment>,
                                          undefined,
                                          undefined,
                                        ],
                                        "fire-count": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "id": "2",
                                        "isExpanded": undefined,
                                        "isFirst": false,
                                        "isFirstVisible": false,
                                        "isHeightAuto": false,
                                        "isLast": false,
                                        "isLastVisible": false,
                                        "name": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "children": <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/2",
                                                }
                                              }
                                            >
                                              RuleBook 2
                                            </Link>,
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "number-of-rulesets": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "secretTableRowKeyId": "2",
                                      },
                                      Object {
                                        "cells": Array [
                                          <React.Fragment>
                                            <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/3",
                                                }
                                              }
                                            >
                                              RuleBook 3
                                            </Link>
                                          </React.Fragment>,
                                          undefined,
                                          undefined,
                                        ],
                                        "fire-count": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "id": "3",
                                        "isExpanded": undefined,
                                        "isFirst": false,
                                        "isFirstVisible": false,
                                        "isHeightAuto": false,
                                        "isLast": true,
                                        "isLastVisible": true,
                                        "name": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "children": <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/3",
                                                }
                                              }
                                            >
                                              RuleBook 3
                                            </Link>,
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "number-of-rulesets": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "secretTableRowKeyId": "3",
                                      },
                                    ]
                                  }
                                  onRow={[Function]}
                                  rowKey="secretTableRowKeyId"
                                  rows={
                                    Array [
                                      Object {
                                        "cells": Array [
                                          <React.Fragment>
                                            <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/1",
                                                }
                                              }
                                            >
                                              RuleBook 1
                                            </Link>
                                          </React.Fragment>,
                                          undefined,
                                          undefined,
                                        ],
                                        "fire-count": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "id": "1",
                                        "isExpanded": undefined,
                                        "isFirst": true,
                                        "isFirstVisible": true,
                                        "isHeightAuto": false,
                                        "isLast": false,
                                        "isLastVisible": false,
                                        "name": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "children": <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/1",
                                                }
                                              }
                                            >
                                              RuleBook 1
                                            </Link>,
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "number-of-rulesets": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "secretTableRowKeyId": "1",
                                      },
                                      Object {
                                        "cells": Array [
                                          <React.Fragment>
                                            <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/2",
                                                }
                                              }
                                            >
                                              RuleBook 2
                                            </Link>
                                          </React.Fragment>,
                                          undefined,
                                          undefined,
                                        ],
                                        "fire-count": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "id": "2",
                                        "isExpanded": undefined,
                                        "isFirst": false,
                                        "isFirstVisible": false,
                                        "isHeightAuto": false,
                                        "isLast": false,
                                        "isLastVisible": false,
                                        "name": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "children": <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/2",
                                                }
                                              }
                                            >
                                              RuleBook 2
                                            </Link>,
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "number-of-rulesets": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "secretTableRowKeyId": "2",
                                      },
                                      Object {
                                        "cells": Array [
                                          <React.Fragment>
                                            <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/3",
                                                }
                                              }
                                            >
                                              RuleBook 3
                                            </Link>
                                          </React.Fragment>,
                                          undefined,
                                          undefined,
                                        ],
                                        "fire-count": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "id": "3",
                                        "isExpanded": undefined,
                                        "isFirst": false,
                                        "isFirstVisible": false,
                                        "isHeightAuto": false,
                                        "isLast": true,
                                        "isLastVisible": true,
                                        "name": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "children": <Link
                                              to={
                                                Object {
                                                  "pathname": "/rulebooks/rulebook/3",
                                                }
                                              }
                                            >
                                              RuleBook 3
                                            </Link>,
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "number-of-rulesets": Object {
                                          "formatters": Array [],
                                          "props": Object {
                                            "isVisible": true,
                                          },
                                          "title": undefined,
                                        },
                                        "secretTableRowKeyId": "3",
                                      },
                                    ]
                                  }
                                >
                                  <BaseBody
                                    className=""
                                    columns={
                                      Array [
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": [Function],
                                            "actions": undefined,
                                            "actionsToggle": undefined,
                                            "allRowsExpanded": false,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canCollapseAll": false,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "collapseAllAriaLabel": "",
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "isHeaderSelectDisabled": false,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Name",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "name",
                                          "props": Object {
                                            "data-key": 0,
                                            "data-label": "Name",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": [Function],
                                            "actions": undefined,
                                            "actionsToggle": undefined,
                                            "allRowsExpanded": false,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canCollapseAll": false,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "collapseAllAriaLabel": "",
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "isHeaderSelectDisabled": false,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Number of rulesets",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "number-of-rulesets",
                                          "props": Object {
                                            "data-key": 1,
                                            "data-label": "Number of rulesets",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": [Function],
                                            "actions": undefined,
                                            "actionsToggle": undefined,
                                            "allRowsExpanded": false,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canCollapseAll": false,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "collapseAllAriaLabel": "",
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "isHeaderSelectDisabled": false,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "Fire count",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "fire-count",
                                          "props": Object {
                                            "data-key": 2,
                                            "data-label": "Fire count",
                                          },
                                        },
                                        Object {
                                          "cell": Object {
                                            "formatters": Array [
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "data": undefined,
                                          "extraParams": Object {
                                            "actionResolver": [Function],
                                            "actions": undefined,
                                            "actionsToggle": undefined,
                                            "allRowsExpanded": false,
                                            "allRowsSelected": false,
                                            "areActionsDisabled": undefined,
                                            "canCollapseAll": false,
                                            "canSelectAll": true,
                                            "canSortFavorites": true,
                                            "collapseAllAriaLabel": "",
                                            "contentId": "expanded-content",
                                            "dropdownDirection": "down",
                                            "dropdownPosition": "right",
                                            "expandId": "expandable-toggle",
                                            "firstUserColumnIndex": 0,
                                            "isHeaderSelectDisabled": false,
                                            "onCollapse": undefined,
                                            "onExpand": undefined,
                                            "onFavorite": undefined,
                                            "onRowEdit": undefined,
                                            "onSelect": undefined,
                                            "onSort": undefined,
                                            "rowLabeledBy": "simple-node",
                                            "selectVariant": "checkbox",
                                            "sortBy": undefined,
                                          },
                                          "header": Object {
                                            "formatters": Array [],
                                            "label": "",
                                            "transforms": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "property": "column-3",
                                          "props": Object {
                                            "data-key": 3,
                                            "data-label": "",
                                          },
                                        },
                                      ]
                                    }
                                    headerRows={null}
                                    mappedRows={
                                      Array [
                                        Object {
                                          "cells": Array [
                                            <React.Fragment>
                                              <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/1",
                                                  }
                                                }
                                              >
                                                RuleBook 1
                                              </Link>
                                            </React.Fragment>,
                                            undefined,
                                            undefined,
                                          ],
                                          "fire-count": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "id": "1",
                                          "isExpanded": undefined,
                                          "isFirst": true,
                                          "isFirstVisible": true,
                                          "isHeightAuto": false,
                                          "isLast": false,
                                          "isLastVisible": false,
                                          "name": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "children": <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/1",
                                                  }
                                                }
                                              >
                                                RuleBook 1
                                              </Link>,
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "number-of-rulesets": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "secretTableRowKeyId": "1",
                                        },
                                        Object {
                                          "cells": Array [
                                            <React.Fragment>
                                              <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/2",
                                                  }
                                                }
                                              >
                                                RuleBook 2
                                              </Link>
                                            </React.Fragment>,
                                            undefined,
                                            undefined,
                                          ],
                                          "fire-count": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "id": "2",
                                          "isExpanded": undefined,
                                          "isFirst": false,
                                          "isFirstVisible": false,
                                          "isHeightAuto": false,
                                          "isLast": false,
                                          "isLastVisible": false,
                                          "name": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "children": <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/2",
                                                  }
                                                }
                                              >
                                                RuleBook 2
                                              </Link>,
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "number-of-rulesets": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "secretTableRowKeyId": "2",
                                        },
                                        Object {
                                          "cells": Array [
                                            <React.Fragment>
                                              <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/3",
                                                  }
                                                }
                                              >
                                                RuleBook 3
                                              </Link>
                                            </React.Fragment>,
                                            undefined,
                                            undefined,
                                          ],
                                          "fire-count": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "id": "3",
                                          "isExpanded": undefined,
                                          "isFirst": false,
                                          "isFirstVisible": false,
                                          "isHeightAuto": false,
                                          "isLast": true,
                                          "isLastVisible": true,
                                          "name": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "children": <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/3",
                                                  }
                                                }
                                              >
                                                RuleBook 3
                                              </Link>,
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "number-of-rulesets": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "secretTableRowKeyId": "3",
                                        },
                                      ]
                                    }
                                    onRow={[Function]}
                                    renderers={
                                      Object {
                                        "body": Object {
                                          "cell": [Function],
                                          "row": [Function],
                                          "wrapper": [Function],
                                        },
                                        "header": Object {
                                          "cell": [Function],
                                          "row": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                          "wrapper": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "table": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      }
                                    }
                                    rowKey="secretTableRowKeyId"
                                    rows={
                                      Array [
                                        Object {
                                          "cells": Array [
                                            <React.Fragment>
                                              <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/1",
                                                  }
                                                }
                                              >
                                                RuleBook 1
                                              </Link>
                                            </React.Fragment>,
                                            undefined,
                                            undefined,
                                          ],
                                          "fire-count": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "id": "1",
                                          "isExpanded": undefined,
                                          "isFirst": true,
                                          "isFirstVisible": true,
                                          "isHeightAuto": false,
                                          "isLast": false,
                                          "isLastVisible": false,
                                          "name": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "children": <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/1",
                                                  }
                                                }
                                              >
                                                RuleBook 1
                                              </Link>,
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "number-of-rulesets": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "secretTableRowKeyId": "1",
                                        },
                                        Object {
                                          "cells": Array [
                                            <React.Fragment>
                                              <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/2",
                                                  }
                                                }
                                              >
                                                RuleBook 2
                                              </Link>
                                            </React.Fragment>,
                                            undefined,
                                            undefined,
                                          ],
                                          "fire-count": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "id": "2",
                                          "isExpanded": undefined,
                                          "isFirst": false,
                                          "isFirstVisible": false,
                                          "isHeightAuto": false,
                                          "isLast": false,
                                          "isLastVisible": false,
                                          "name": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "children": <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/2",
                                                  }
                                                }
                                              >
                                                RuleBook 2
                                              </Link>,
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "number-of-rulesets": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "secretTableRowKeyId": "2",
                                        },
                                        Object {
                                          "cells": Array [
                                            <React.Fragment>
                                              <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/3",
                                                  }
                                                }
                                              >
                                                RuleBook 3
                                              </Link>
                                            </React.Fragment>,
                                            undefined,
                                            undefined,
                                          ],
                                          "fire-count": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "id": "3",
                                          "isExpanded": undefined,
                                          "isFirst": false,
                                          "isFirstVisible": false,
                                          "isHeightAuto": false,
                                          "isLast": true,
                                          "isLastVisible": true,
                                          "name": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "children": <Link
                                                to={
                                                  Object {
                                                    "pathname": "/rulebooks/rulebook/3",
                                                  }
                                                }
                                              >
                                                RuleBook 3
                                              </Link>,
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "number-of-rulesets": Object {
                                            "formatters": Array [],
                                            "props": Object {
                                              "isVisible": true,
                                            },
                                            "title": undefined,
                                          },
                                          "secretTableRowKeyId": "3",
                                        },
                                      ]
                                    }
                                  >
                                    <BodyWrapper
                                      className=""
                                      headerRows={null}
                                      mappedRows={
                                        Array [
                                          Object {
                                            "cells": Array [
                                              <React.Fragment>
                                                <Link
                                                  to={
                                                    Object {
                                                      "pathname": "/rulebooks/rulebook/1",
                                                    }
                                                  }
                                                >
                                                  RuleBook 1
                                                </Link>
                                              </React.Fragment>,
                                              undefined,
                                              undefined,
                                            ],
                                            "fire-count": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "id": "1",
                                            "isExpanded": undefined,
                                            "isFirst": true,
                                            "isFirstVisible": true,
                                            "isHeightAuto": false,
                                            "isLast": false,
                                            "isLastVisible": false,
                                            "name": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "children": <Link
                                                  to={
                                                    Object {
                                                      "pathname": "/rulebooks/rulebook/1",
                                                    }
                                                  }
                                                >
                                                  RuleBook 1
                                                </Link>,
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "number-of-rulesets": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "secretTableRowKeyId": "1",
                                          },
                                          Object {
                                            "cells": Array [
                                              <React.Fragment>
                                                <Link
                                                  to={
                                                    Object {
                                                      "pathname": "/rulebooks/rulebook/2",
                                                    }
                                                  }
                                                >
                                                  RuleBook 2
                                                </Link>
                                              </React.Fragment>,
                                              undefined,
                                              undefined,
                                            ],
                                            "fire-count": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "id": "2",
                                            "isExpanded": undefined,
                                            "isFirst": false,
                                            "isFirstVisible": false,
                                            "isHeightAuto": false,
                                            "isLast": false,
                                            "isLastVisible": false,
                                            "name": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "children": <Link
                                                  to={
                                                    Object {
                                                      "pathname": "/rulebooks/rulebook/2",
                                                    }
                                                  }
                                                >
                                                  RuleBook 2
                                                </Link>,
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "number-of-rulesets": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "secretTableRowKeyId": "2",
                                          },
                                          Object {
                                            "cells": Array [
                                              <React.Fragment>
                                                <Link
                                                  to={
                                                    Object {
                                                      "pathname": "/rulebooks/rulebook/3",
                                                    }
                                                  }
                                                >
                                                  RuleBook 3
                                                </Link>
                                              </React.Fragment>,
                                              undefined,
                                              undefined,
                                            ],
                                            "fire-count": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "id": "3",
                                            "isExpanded": undefined,
                                            "isFirst": false,
                                            "isFirstVisible": false,
                                            "isHeightAuto": false,
                                            "isLast": true,
                                            "isLastVisible": true,
                                            "name": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "children": <Link
                                                  to={
                                                    Object {
                                                      "pathname": "/rulebooks/rulebook/3",
                                                    }
                                                  }
                                                >
                                                  RuleBook 3
                                                </Link>,
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "number-of-rulesets": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": undefined,
                                            },
                                            "secretTableRowKeyId": "3",
                                          },
                                        ]
                                      }
                                    >
                                      <Tbody
                                        className=""
                                      >
                                        <TbodyBase
                                          className=""
                                          innerRef={null}
                                        >
                                          <tbody
                                            className=""
                                            role="rowgroup"
                                          >
                                            <BodyRow
                                              columns={
                                                Array [
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Name",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "name",
                                                    "props": Object {
                                                      "data-key": 0,
                                                      "data-label": "Name",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Number of rulesets",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "number-of-rulesets",
                                                    "props": Object {
                                                      "data-key": 1,
                                                      "data-label": "Number of rulesets",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Fire count",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "fire-count",
                                                    "props": Object {
                                                      "data-key": 2,
                                                      "data-label": "Fire count",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "column-3",
                                                    "props": Object {
                                                      "data-key": 3,
                                                      "data-label": "",
                                                    },
                                                  },
                                                ]
                                              }
                                              key="1-row"
                                              onRow={[Function]}
                                              renderers={
                                                Object {
                                                  "cell": [Function],
                                                  "row": [Function],
                                                  "wrapper": [Function],
                                                }
                                              }
                                              rowData={
                                                Object {
                                                  "cells": Array [
                                                    <React.Fragment>
                                                      <Link
                                                        to={
                                                          Object {
                                                            "pathname": "/rulebooks/rulebook/1",
                                                          }
                                                        }
                                                      >
                                                        RuleBook 1
                                                      </Link>
                                                    </React.Fragment>,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                  "fire-count": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "id": "1",
                                                  "isExpanded": undefined,
                                                  "isFirst": true,
                                                  "isFirstVisible": true,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "name": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "children": <Link
                                                        to={
                                                          Object {
                                                            "pathname": "/rulebooks/rulebook/1",
                                                          }
                                                        }
                                                      >
                                                        RuleBook 1
                                                      </Link>,
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "number-of-rulesets": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "secretTableRowKeyId": "1",
                                                }
                                              }
                                              rowIndex={0}
                                              rowKey="1-row"
                                            >
                                              <RowWrapper
                                                className=""
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                row={
                                                  Object {
                                                    "cells": Array [
                                                      <React.Fragment>
                                                        <Link
                                                          to={
                                                            Object {
                                                              "pathname": "/rulebooks/rulebook/1",
                                                            }
                                                          }
                                                        >
                                                          RuleBook 1
                                                        </Link>
                                                      </React.Fragment>,
                                                      undefined,
                                                      undefined,
                                                    ],
                                                    "fire-count": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "id": "1",
                                                    "isExpanded": undefined,
                                                    "isFirst": true,
                                                    "isFirstVisible": true,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "name": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "children": <Link
                                                          to={
                                                            Object {
                                                              "pathname": "/rulebooks/rulebook/1",
                                                            }
                                                          }
                                                        >
                                                          RuleBook 1
                                                        </Link>,
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "number-of-rulesets": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "secretTableRowKeyId": "1",
                                                  }
                                                }
                                                rowProps={
                                                  Object {
                                                    "rowIndex": 0,
                                                    "rowKey": "1-row",
                                                  }
                                                }
                                              >
                                                <Tr
                                                  className=""
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                >
                                                  <TrBase
                                                    className=""
                                                    innerRef={null}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                  >
                                                    <tr
                                                      className=""
                                                      data-ouia-component-id="OUIA-Generated-TableRow-2"
                                                      data-ouia-component-type="PF4/TableRow"
                                                      data-ouia-safe={true}
                                                      hidden={false}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                    >
                                                      <BodyCell
                                                        data-key={0}
                                                        data-label="Name"
                                                        isVisible={true}
                                                        key="col-0-row-0"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={0}
                                                          dataLabel="Name"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={0}
                                                            dataLabel="Name"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={0}
                                                              data-label="Name"
                                                              onMouseEnter={[Function]}
                                                            >
                                                              <ForwardRef(Link)
                                                                to={
                                                                  Object {
                                                                    "pathname": "/rulebooks/rulebook/1",
                                                                  }
                                                                }
                                                              >
                                                                <LinkAnchor
                                                                  href="/rulebooks/rulebook/1"
                                                                  navigate={[Function]}
                                                                >
                                                                  <a
                                                                    href="/rulebooks/rulebook/1"
                                                                    onClick={[Function]}
                                                                  >
                                                                    RuleBook 1
                                                                  </a>
                                                                </LinkAnchor>
                                                              </ForwardRef(Link)>
                                                            </td>
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        data-key={1}
                                                        data-label="Number of rulesets"
                                                        isVisible={true}
                                                        key="col-1-row-0"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={1}
                                                          dataLabel="Number of rulesets"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={1}
                                                            dataLabel="Number of rulesets"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={1}
                                                              data-label="Number of rulesets"
                                                              onMouseEnter={[Function]}
                                                            />
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        data-key={2}
                                                        data-label="Fire count"
                                                        isVisible={true}
                                                        key="col-2-row-0"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={2}
                                                          dataLabel="Fire count"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={2}
                                                            dataLabel="Fire count"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={2}
                                                              data-label="Fire count"
                                                              onMouseEnter={[Function]}
                                                            />
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        className="pf-c-table__action"
                                                        data-key={3}
                                                        data-label=""
                                                        isVisible={true}
                                                        key="col-3-row-0"
                                                        style={
                                                          Object {
                                                            "paddingRight": 0,
                                                          }
                                                        }
                                                      >
                                                        <Td
                                                          className="pf-c-table__action"
                                                          component="td"
                                                          data-key={3}
                                                          dataLabel={null}
                                                          onMouseEnter={[Function]}
                                                          style={
                                                            Object {
                                                              "paddingRight": 0,
                                                            }
                                                          }
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className="pf-c-table__action"
                                                            component="td"
                                                            data-key={3}
                                                            dataLabel={null}
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            style={
                                                              Object {
                                                                "paddingRight": 0,
                                                              }
                                                            }
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className="pf-c-table__action"
                                                              data-key={3}
                                                              data-label={null}
                                                              onMouseEnter={[Function]}
                                                              style={
                                                                Object {
                                                                  "paddingRight": 0,
                                                                }
                                                              }
                                                            >
                                                              <ActionsColumn
                                                                dropdownDirection="down"
                                                                dropdownPosition="right"
                                                                extraData={
                                                                  Object {
                                                                    "column": Object {
                                                                      "cell": Object {
                                                                        "formatters": Array [
                                                                          [Function],
                                                                        ],
                                                                        "transforms": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "data": undefined,
                                                                      "extraParams": Object {
                                                                        "actionResolver": [Function],
                                                                        "actions": undefined,
                                                                        "actionsToggle": undefined,
                                                                        "allRowsExpanded": false,
                                                                        "allRowsSelected": false,
                                                                        "areActionsDisabled": undefined,
                                                                        "canCollapseAll": false,
                                                                        "canSelectAll": true,
                                                                        "canSortFavorites": true,
                                                                        "collapseAllAriaLabel": "",
                                                                        "contentId": "expanded-content",
                                                                        "dropdownDirection": "down",
                                                                        "dropdownPosition": "right",
                                                                        "expandId": "expandable-toggle",
                                                                        "firstUserColumnIndex": 0,
                                                                        "isHeaderSelectDisabled": false,
                                                                        "onCollapse": undefined,
                                                                        "onExpand": undefined,
                                                                        "onFavorite": undefined,
                                                                        "onRowEdit": undefined,
                                                                        "onSelect": undefined,
                                                                        "onSort": undefined,
                                                                        "rowLabeledBy": "simple-node",
                                                                        "selectVariant": "checkbox",
                                                                        "sortBy": undefined,
                                                                      },
                                                                      "header": Object {
                                                                        "formatters": Array [],
                                                                        "label": "",
                                                                        "transforms": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "property": "column-3",
                                                                      "props": Object {
                                                                        "data-key": 3,
                                                                        "data-label": "",
                                                                      },
                                                                    },
                                                                    "columnIndex": 3,
                                                                    "property": "column-3",
                                                                    "rowIndex": 0,
                                                                  }
                                                                }
                                                                items={
                                                                  Array [
                                                                    Object {
                                                                      "component": "button",
                                                                      "onClick": [Function],
                                                                      "title": "Disable",
                                                                    },
                                                                  ]
                                                                }
                                                                rowData={
                                                                  Object {
                                                                    "cells": Array [
                                                                      <React.Fragment>
                                                                        <ForwardRef(Link)
                                                                          to={
                                                                            Object {
                                                                              "pathname": "/rulebooks/rulebook/1",
                                                                            }
                                                                          }
                                                                        >
                                                                          RuleBook 1
                                                                        </ForwardRef(Link)>
                                                                      </React.Fragment>,
                                                                      undefined,
                                                                      undefined,
                                                                    ],
                                                                    "fire-count": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "id": "1",
                                                                    "isExpanded": undefined,
                                                                    "isFirst": true,
                                                                    "isFirstVisible": true,
                                                                    "isHeightAuto": false,
                                                                    "isLast": false,
                                                                    "isLastVisible": false,
                                                                    "name": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "children": <ForwardRef(Link)
                                                                          to={
                                                                            Object {
                                                                              "pathname": "/rulebooks/rulebook/1",
                                                                            }
                                                                          }
                                                                        >
                                                                          RuleBook 1
                                                                        </ForwardRef(Link)>,
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "number-of-rulesets": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "secretTableRowKeyId": "1",
                                                                  }
                                                                }
                                                              >
                                                                <Dropdown
                                                                  direction="down"
                                                                  dropdownItems={
                                                                    Array [
                                                                      <DropdownItem
                                                                        component="button"
                                                                        data-key={0}
                                                                        onClick={[Function]}
                                                                      >
                                                                        Disable
                                                                      </DropdownItem>,
                                                                    ]
                                                                  }
                                                                  isOpen={false}
                                                                  isPlain={true}
                                                                  position="right"
                                                                  toggle={
                                                                    <KebabToggle
                                                                      onToggle={[Function]}
                                                                    />
                                                                  }
                                                                >
                                                                  <DropdownWithContext
                                                                    autoFocus={true}
                                                                    className=""
                                                                    direction="down"
                                                                    dropdownItems={
                                                                      Array [
                                                                        <DropdownItem
                                                                          component="button"
                                                                          data-key={0}
                                                                          onClick={[Function]}
                                                                        >
                                                                          Disable
                                                                        </DropdownItem>,
                                                                      ]
                                                                    }
                                                                    isFlipEnabled={false}
                                                                    isGrouped={false}
                                                                    isOpen={false}
                                                                    isPlain={true}
                                                                    isText={false}
                                                                    menuAppendTo="inline"
                                                                    onSelect={[Function]}
                                                                    position="right"
                                                                    toggle={
                                                                      <KebabToggle
                                                                        onToggle={[Function]}
                                                                      />
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="pf-c-dropdown pf-m-align-right"
                                                                      data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe={true}
                                                                    >
                                                                      <KebabToggle
                                                                        aria-haspopup={true}
                                                                        getMenuRef={[Function]}
                                                                        id="pf-dropdown-toggle-id-3"
                                                                        isOpen={false}
                                                                        isPlain={true}
                                                                        isText={false}
                                                                        key=".0"
                                                                        onEnter={[Function]}
                                                                        onToggle={[Function]}
                                                                        parentRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="pf-c-dropdown pf-m-align-right"
                                                                              data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                                                              data-ouia-component-type="PF4/Dropdown"
                                                                              data-ouia-safe="true"
                                                                            >
                                                                              <button
                                                                                aria-expanded="false"
                                                                                aria-haspopup="true"
                                                                                aria-label="Actions"
                                                                                class="pf-c-dropdown__toggle pf-m-plain"
                                                                                id="pf-dropdown-toggle-id-3"
                                                                                type="button"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  fill="currentColor"
                                                                                  height="1em"
                                                                                  role="img"
                                                                                  style="vertical-align: -0.125em;"
                                                                                  viewBox="0 0 192 512"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                  />
                                                                                </svg>
                                                                              </button>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Toggle
                                                                          aria-haspopup={true}
                                                                          aria-label="Actions"
                                                                          bubbleEvent={false}
                                                                          className=""
                                                                          getMenuRef={[Function]}
                                                                          id="pf-dropdown-toggle-id-3"
                                                                          isActive={false}
                                                                          isDisabled={false}
                                                                          isOpen={false}
                                                                          isPlain={true}
                                                                          isPrimary={false}
                                                                          isSplitButton={false}
                                                                          isText={false}
                                                                          onEnter={[Function]}
                                                                          onToggle={[Function]}
                                                                          parentRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="pf-c-dropdown pf-m-align-right"
                                                                                data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                                                                data-ouia-component-type="PF4/Dropdown"
                                                                                data-ouia-safe="true"
                                                                              >
                                                                                <button
                                                                                  aria-expanded="false"
                                                                                  aria-haspopup="true"
                                                                                  aria-label="Actions"
                                                                                  class="pf-c-dropdown__toggle pf-m-plain"
                                                                                  id="pf-dropdown-toggle-id-3"
                                                                                  type="button"
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    fill="currentColor"
                                                                                    height="1em"
                                                                                    role="img"
                                                                                    style="vertical-align: -0.125em;"
                                                                                    viewBox="0 0 192 512"
                                                                                    width="1em"
                                                                                  >
                                                                                    <path
                                                                                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                    />
                                                                                  </svg>
                                                                                </button>
                                                                              </div>,
                                                                            }
                                                                          }
                                                                        >
                                                                          <button
                                                                            aria-expanded={false}
                                                                            aria-haspopup={true}
                                                                            aria-label="Actions"
                                                                            className="pf-c-dropdown__toggle pf-m-plain"
                                                                            disabled={false}
                                                                            id="pf-dropdown-toggle-id-3"
                                                                            onClick={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            type="button"
                                                                          >
                                                                            <EllipsisVIcon
                                                                              color="currentColor"
                                                                              noVerticalAlign={false}
                                                                              size="sm"
                                                                            >
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                aria-labelledby={null}
                                                                                fill="currentColor"
                                                                                height="1em"
                                                                                role="img"
                                                                                style={
                                                                                  Object {
                                                                                    "verticalAlign": "-0.125em",
                                                                                  }
                                                                                }
                                                                                viewBox="0 0 192 512"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                />
                                                                              </svg>
                                                                            </EllipsisVIcon>
                                                                          </button>
                                                                        </Toggle>
                                                                      </KebabToggle>
                                                                    </div>
                                                                  </DropdownWithContext>
                                                                </Dropdown>
                                                              </ActionsColumn>
                                                            </td>
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                    </tr>
                                                  </TrBase>
                                                </Tr>
                                              </RowWrapper>
                                            </BodyRow>
                                            <BodyRow
                                              columns={
                                                Array [
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Name",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "name",
                                                    "props": Object {
                                                      "data-key": 0,
                                                      "data-label": "Name",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Number of rulesets",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "number-of-rulesets",
                                                    "props": Object {
                                                      "data-key": 1,
                                                      "data-label": "Number of rulesets",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Fire count",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "fire-count",
                                                    "props": Object {
                                                      "data-key": 2,
                                                      "data-label": "Fire count",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "column-3",
                                                    "props": Object {
                                                      "data-key": 3,
                                                      "data-label": "",
                                                    },
                                                  },
                                                ]
                                              }
                                              key="2-row"
                                              onRow={[Function]}
                                              renderers={
                                                Object {
                                                  "cell": [Function],
                                                  "row": [Function],
                                                  "wrapper": [Function],
                                                }
                                              }
                                              rowData={
                                                Object {
                                                  "cells": Array [
                                                    <React.Fragment>
                                                      <Link
                                                        to={
                                                          Object {
                                                            "pathname": "/rulebooks/rulebook/2",
                                                          }
                                                        }
                                                      >
                                                        RuleBook 2
                                                      </Link>
                                                    </React.Fragment>,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                  "fire-count": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "id": "2",
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "name": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "children": <Link
                                                        to={
                                                          Object {
                                                            "pathname": "/rulebooks/rulebook/2",
                                                          }
                                                        }
                                                      >
                                                        RuleBook 2
                                                      </Link>,
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "number-of-rulesets": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "secretTableRowKeyId": "2",
                                                }
                                              }
                                              rowIndex={1}
                                              rowKey="2-row"
                                            >
                                              <RowWrapper
                                                className=""
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                row={
                                                  Object {
                                                    "cells": Array [
                                                      <React.Fragment>
                                                        <Link
                                                          to={
                                                            Object {
                                                              "pathname": "/rulebooks/rulebook/2",
                                                            }
                                                          }
                                                        >
                                                          RuleBook 2
                                                        </Link>
                                                      </React.Fragment>,
                                                      undefined,
                                                      undefined,
                                                    ],
                                                    "fire-count": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "id": "2",
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "name": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "children": <Link
                                                          to={
                                                            Object {
                                                              "pathname": "/rulebooks/rulebook/2",
                                                            }
                                                          }
                                                        >
                                                          RuleBook 2
                                                        </Link>,
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "number-of-rulesets": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "secretTableRowKeyId": "2",
                                                  }
                                                }
                                                rowProps={
                                                  Object {
                                                    "rowIndex": 1,
                                                    "rowKey": "2-row",
                                                  }
                                                }
                                              >
                                                <Tr
                                                  className=""
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                >
                                                  <TrBase
                                                    className=""
                                                    innerRef={null}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                  >
                                                    <tr
                                                      className=""
                                                      data-ouia-component-id="OUIA-Generated-TableRow-3"
                                                      data-ouia-component-type="PF4/TableRow"
                                                      data-ouia-safe={true}
                                                      hidden={false}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                    >
                                                      <BodyCell
                                                        data-key={0}
                                                        data-label="Name"
                                                        isVisible={true}
                                                        key="col-0-row-1"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={0}
                                                          dataLabel="Name"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={0}
                                                            dataLabel="Name"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={0}
                                                              data-label="Name"
                                                              onMouseEnter={[Function]}
                                                            >
                                                              <ForwardRef(Link)
                                                                to={
                                                                  Object {
                                                                    "pathname": "/rulebooks/rulebook/2",
                                                                  }
                                                                }
                                                              >
                                                                <LinkAnchor
                                                                  href="/rulebooks/rulebook/2"
                                                                  navigate={[Function]}
                                                                >
                                                                  <a
                                                                    href="/rulebooks/rulebook/2"
                                                                    onClick={[Function]}
                                                                  >
                                                                    RuleBook 2
                                                                  </a>
                                                                </LinkAnchor>
                                                              </ForwardRef(Link)>
                                                            </td>
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        data-key={1}
                                                        data-label="Number of rulesets"
                                                        isVisible={true}
                                                        key="col-1-row-1"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={1}
                                                          dataLabel="Number of rulesets"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={1}
                                                            dataLabel="Number of rulesets"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={1}
                                                              data-label="Number of rulesets"
                                                              onMouseEnter={[Function]}
                                                            />
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        data-key={2}
                                                        data-label="Fire count"
                                                        isVisible={true}
                                                        key="col-2-row-1"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={2}
                                                          dataLabel="Fire count"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={2}
                                                            dataLabel="Fire count"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={2}
                                                              data-label="Fire count"
                                                              onMouseEnter={[Function]}
                                                            />
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        className="pf-c-table__action"
                                                        data-key={3}
                                                        data-label=""
                                                        isVisible={true}
                                                        key="col-3-row-1"
                                                        style={
                                                          Object {
                                                            "paddingRight": 0,
                                                          }
                                                        }
                                                      >
                                                        <Td
                                                          className="pf-c-table__action"
                                                          component="td"
                                                          data-key={3}
                                                          dataLabel={null}
                                                          onMouseEnter={[Function]}
                                                          style={
                                                            Object {
                                                              "paddingRight": 0,
                                                            }
                                                          }
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className="pf-c-table__action"
                                                            component="td"
                                                            data-key={3}
                                                            dataLabel={null}
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            style={
                                                              Object {
                                                                "paddingRight": 0,
                                                              }
                                                            }
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className="pf-c-table__action"
                                                              data-key={3}
                                                              data-label={null}
                                                              onMouseEnter={[Function]}
                                                              style={
                                                                Object {
                                                                  "paddingRight": 0,
                                                                }
                                                              }
                                                            >
                                                              <ActionsColumn
                                                                dropdownDirection="down"
                                                                dropdownPosition="right"
                                                                extraData={
                                                                  Object {
                                                                    "column": Object {
                                                                      "cell": Object {
                                                                        "formatters": Array [
                                                                          [Function],
                                                                        ],
                                                                        "transforms": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "data": undefined,
                                                                      "extraParams": Object {
                                                                        "actionResolver": [Function],
                                                                        "actions": undefined,
                                                                        "actionsToggle": undefined,
                                                                        "allRowsExpanded": false,
                                                                        "allRowsSelected": false,
                                                                        "areActionsDisabled": undefined,
                                                                        "canCollapseAll": false,
                                                                        "canSelectAll": true,
                                                                        "canSortFavorites": true,
                                                                        "collapseAllAriaLabel": "",
                                                                        "contentId": "expanded-content",
                                                                        "dropdownDirection": "down",
                                                                        "dropdownPosition": "right",
                                                                        "expandId": "expandable-toggle",
                                                                        "firstUserColumnIndex": 0,
                                                                        "isHeaderSelectDisabled": false,
                                                                        "onCollapse": undefined,
                                                                        "onExpand": undefined,
                                                                        "onFavorite": undefined,
                                                                        "onRowEdit": undefined,
                                                                        "onSelect": undefined,
                                                                        "onSort": undefined,
                                                                        "rowLabeledBy": "simple-node",
                                                                        "selectVariant": "checkbox",
                                                                        "sortBy": undefined,
                                                                      },
                                                                      "header": Object {
                                                                        "formatters": Array [],
                                                                        "label": "",
                                                                        "transforms": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "property": "column-3",
                                                                      "props": Object {
                                                                        "data-key": 3,
                                                                        "data-label": "",
                                                                      },
                                                                    },
                                                                    "columnIndex": 3,
                                                                    "property": "column-3",
                                                                    "rowIndex": 1,
                                                                  }
                                                                }
                                                                items={
                                                                  Array [
                                                                    Object {
                                                                      "component": "button",
                                                                      "onClick": [Function],
                                                                      "title": "Disable",
                                                                    },
                                                                  ]
                                                                }
                                                                rowData={
                                                                  Object {
                                                                    "cells": Array [
                                                                      <React.Fragment>
                                                                        <ForwardRef(Link)
                                                                          to={
                                                                            Object {
                                                                              "pathname": "/rulebooks/rulebook/2",
                                                                            }
                                                                          }
                                                                        >
                                                                          RuleBook 2
                                                                        </ForwardRef(Link)>
                                                                      </React.Fragment>,
                                                                      undefined,
                                                                      undefined,
                                                                    ],
                                                                    "fire-count": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "id": "2",
                                                                    "isExpanded": undefined,
                                                                    "isFirst": false,
                                                                    "isFirstVisible": false,
                                                                    "isHeightAuto": false,
                                                                    "isLast": false,
                                                                    "isLastVisible": false,
                                                                    "name": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "children": <ForwardRef(Link)
                                                                          to={
                                                                            Object {
                                                                              "pathname": "/rulebooks/rulebook/2",
                                                                            }
                                                                          }
                                                                        >
                                                                          RuleBook 2
                                                                        </ForwardRef(Link)>,
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "number-of-rulesets": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "secretTableRowKeyId": "2",
                                                                  }
                                                                }
                                                              >
                                                                <Dropdown
                                                                  direction="down"
                                                                  dropdownItems={
                                                                    Array [
                                                                      <DropdownItem
                                                                        component="button"
                                                                        data-key={0}
                                                                        onClick={[Function]}
                                                                      >
                                                                        Disable
                                                                      </DropdownItem>,
                                                                    ]
                                                                  }
                                                                  isOpen={false}
                                                                  isPlain={true}
                                                                  position="right"
                                                                  toggle={
                                                                    <KebabToggle
                                                                      onToggle={[Function]}
                                                                    />
                                                                  }
                                                                >
                                                                  <DropdownWithContext
                                                                    autoFocus={true}
                                                                    className=""
                                                                    direction="down"
                                                                    dropdownItems={
                                                                      Array [
                                                                        <DropdownItem
                                                                          component="button"
                                                                          data-key={0}
                                                                          onClick={[Function]}
                                                                        >
                                                                          Disable
                                                                        </DropdownItem>,
                                                                      ]
                                                                    }
                                                                    isFlipEnabled={false}
                                                                    isGrouped={false}
                                                                    isOpen={false}
                                                                    isPlain={true}
                                                                    isText={false}
                                                                    menuAppendTo="inline"
                                                                    onSelect={[Function]}
                                                                    position="right"
                                                                    toggle={
                                                                      <KebabToggle
                                                                        onToggle={[Function]}
                                                                      />
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="pf-c-dropdown pf-m-align-right"
                                                                      data-ouia-component-id="OUIA-Generated-Dropdown-2"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe={true}
                                                                    >
                                                                      <KebabToggle
                                                                        aria-haspopup={true}
                                                                        getMenuRef={[Function]}
                                                                        id="pf-dropdown-toggle-id-4"
                                                                        isOpen={false}
                                                                        isPlain={true}
                                                                        isText={false}
                                                                        key=".0"
                                                                        onEnter={[Function]}
                                                                        onToggle={[Function]}
                                                                        parentRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="pf-c-dropdown pf-m-align-right"
                                                                              data-ouia-component-id="OUIA-Generated-Dropdown-2"
                                                                              data-ouia-component-type="PF4/Dropdown"
                                                                              data-ouia-safe="true"
                                                                            >
                                                                              <button
                                                                                aria-expanded="false"
                                                                                aria-haspopup="true"
                                                                                aria-label="Actions"
                                                                                class="pf-c-dropdown__toggle pf-m-plain"
                                                                                id="pf-dropdown-toggle-id-4"
                                                                                type="button"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  fill="currentColor"
                                                                                  height="1em"
                                                                                  role="img"
                                                                                  style="vertical-align: -0.125em;"
                                                                                  viewBox="0 0 192 512"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                  />
                                                                                </svg>
                                                                              </button>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Toggle
                                                                          aria-haspopup={true}
                                                                          aria-label="Actions"
                                                                          bubbleEvent={false}
                                                                          className=""
                                                                          getMenuRef={[Function]}
                                                                          id="pf-dropdown-toggle-id-4"
                                                                          isActive={false}
                                                                          isDisabled={false}
                                                                          isOpen={false}
                                                                          isPlain={true}
                                                                          isPrimary={false}
                                                                          isSplitButton={false}
                                                                          isText={false}
                                                                          onEnter={[Function]}
                                                                          onToggle={[Function]}
                                                                          parentRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="pf-c-dropdown pf-m-align-right"
                                                                                data-ouia-component-id="OUIA-Generated-Dropdown-2"
                                                                                data-ouia-component-type="PF4/Dropdown"
                                                                                data-ouia-safe="true"
                                                                              >
                                                                                <button
                                                                                  aria-expanded="false"
                                                                                  aria-haspopup="true"
                                                                                  aria-label="Actions"
                                                                                  class="pf-c-dropdown__toggle pf-m-plain"
                                                                                  id="pf-dropdown-toggle-id-4"
                                                                                  type="button"
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    fill="currentColor"
                                                                                    height="1em"
                                                                                    role="img"
                                                                                    style="vertical-align: -0.125em;"
                                                                                    viewBox="0 0 192 512"
                                                                                    width="1em"
                                                                                  >
                                                                                    <path
                                                                                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                    />
                                                                                  </svg>
                                                                                </button>
                                                                              </div>,
                                                                            }
                                                                          }
                                                                        >
                                                                          <button
                                                                            aria-expanded={false}
                                                                            aria-haspopup={true}
                                                                            aria-label="Actions"
                                                                            className="pf-c-dropdown__toggle pf-m-plain"
                                                                            disabled={false}
                                                                            id="pf-dropdown-toggle-id-4"
                                                                            onClick={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            type="button"
                                                                          >
                                                                            <EllipsisVIcon
                                                                              color="currentColor"
                                                                              noVerticalAlign={false}
                                                                              size="sm"
                                                                            >
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                aria-labelledby={null}
                                                                                fill="currentColor"
                                                                                height="1em"
                                                                                role="img"
                                                                                style={
                                                                                  Object {
                                                                                    "verticalAlign": "-0.125em",
                                                                                  }
                                                                                }
                                                                                viewBox="0 0 192 512"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                />
                                                                              </svg>
                                                                            </EllipsisVIcon>
                                                                          </button>
                                                                        </Toggle>
                                                                      </KebabToggle>
                                                                    </div>
                                                                  </DropdownWithContext>
                                                                </Dropdown>
                                                              </ActionsColumn>
                                                            </td>
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                    </tr>
                                                  </TrBase>
                                                </Tr>
                                              </RowWrapper>
                                            </BodyRow>
                                            <BodyRow
                                              columns={
                                                Array [
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Name",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "name",
                                                    "props": Object {
                                                      "data-key": 0,
                                                      "data-label": "Name",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Number of rulesets",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "number-of-rulesets",
                                                    "props": Object {
                                                      "data-key": 1,
                                                      "data-label": "Number of rulesets",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Fire count",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "fire-count",
                                                    "props": Object {
                                                      "data-key": 2,
                                                      "data-label": "Fire count",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": [Function],
                                                      "actions": undefined,
                                                      "actionsToggle": undefined,
                                                      "allRowsExpanded": false,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canCollapseAll": false,
                                                      "canSelectAll": true,
                                                      "canSortFavorites": true,
                                                      "collapseAllAriaLabel": "",
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "isHeaderSelectDisabled": false,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "column-3",
                                                    "props": Object {
                                                      "data-key": 3,
                                                      "data-label": "",
                                                    },
                                                  },
                                                ]
                                              }
                                              key="3-row"
                                              onRow={[Function]}
                                              renderers={
                                                Object {
                                                  "cell": [Function],
                                                  "row": [Function],
                                                  "wrapper": [Function],
                                                }
                                              }
                                              rowData={
                                                Object {
                                                  "cells": Array [
                                                    <React.Fragment>
                                                      <Link
                                                        to={
                                                          Object {
                                                            "pathname": "/rulebooks/rulebook/3",
                                                          }
                                                        }
                                                      >
                                                        RuleBook 3
                                                      </Link>
                                                    </React.Fragment>,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                  "fire-count": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "id": "3",
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": true,
                                                  "isLastVisible": true,
                                                  "name": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "children": <Link
                                                        to={
                                                          Object {
                                                            "pathname": "/rulebooks/rulebook/3",
                                                          }
                                                        }
                                                      >
                                                        RuleBook 3
                                                      </Link>,
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "number-of-rulesets": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": undefined,
                                                  },
                                                  "secretTableRowKeyId": "3",
                                                }
                                              }
                                              rowIndex={2}
                                              rowKey="3-row"
                                            >
                                              <RowWrapper
                                                className=""
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                row={
                                                  Object {
                                                    "cells": Array [
                                                      <React.Fragment>
                                                        <Link
                                                          to={
                                                            Object {
                                                              "pathname": "/rulebooks/rulebook/3",
                                                            }
                                                          }
                                                        >
                                                          RuleBook 3
                                                        </Link>
                                                      </React.Fragment>,
                                                      undefined,
                                                      undefined,
                                                    ],
                                                    "fire-count": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "id": "3",
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": true,
                                                    "isLastVisible": true,
                                                    "name": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "children": <Link
                                                          to={
                                                            Object {
                                                              "pathname": "/rulebooks/rulebook/3",
                                                            }
                                                          }
                                                        >
                                                          RuleBook 3
                                                        </Link>,
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "number-of-rulesets": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": undefined,
                                                    },
                                                    "secretTableRowKeyId": "3",
                                                  }
                                                }
                                                rowProps={
                                                  Object {
                                                    "rowIndex": 2,
                                                    "rowKey": "3-row",
                                                  }
                                                }
                                              >
                                                <Tr
                                                  className=""
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                >
                                                  <TrBase
                                                    className=""
                                                    innerRef={null}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                  >
                                                    <tr
                                                      className=""
                                                      data-ouia-component-id="OUIA-Generated-TableRow-4"
                                                      data-ouia-component-type="PF4/TableRow"
                                                      data-ouia-safe={true}
                                                      hidden={false}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                    >
                                                      <BodyCell
                                                        data-key={0}
                                                        data-label="Name"
                                                        isVisible={true}
                                                        key="col-0-row-2"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={0}
                                                          dataLabel="Name"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={0}
                                                            dataLabel="Name"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={0}
                                                              data-label="Name"
                                                              onMouseEnter={[Function]}
                                                            >
                                                              <ForwardRef(Link)
                                                                to={
                                                                  Object {
                                                                    "pathname": "/rulebooks/rulebook/3",
                                                                  }
                                                                }
                                                              >
                                                                <LinkAnchor
                                                                  href="/rulebooks/rulebook/3"
                                                                  navigate={[Function]}
                                                                >
                                                                  <a
                                                                    href="/rulebooks/rulebook/3"
                                                                    onClick={[Function]}
                                                                  >
                                                                    RuleBook 3
                                                                  </a>
                                                                </LinkAnchor>
                                                              </ForwardRef(Link)>
                                                            </td>
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        data-key={1}
                                                        data-label="Number of rulesets"
                                                        isVisible={true}
                                                        key="col-1-row-2"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={1}
                                                          dataLabel="Number of rulesets"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={1}
                                                            dataLabel="Number of rulesets"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={1}
                                                              data-label="Number of rulesets"
                                                              onMouseEnter={[Function]}
                                                            />
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        data-key={2}
                                                        data-label="Fire count"
                                                        isVisible={true}
                                                        key="col-2-row-2"
                                                      >
                                                        <Td
                                                          className=""
                                                          component="td"
                                                          data-key={2}
                                                          dataLabel="Fire count"
                                                          onMouseEnter={[Function]}
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className=""
                                                            component="td"
                                                            data-key={2}
                                                            dataLabel="Fire count"
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className=""
                                                              data-key={2}
                                                              data-label="Fire count"
                                                              onMouseEnter={[Function]}
                                                            />
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                      <BodyCell
                                                        className="pf-c-table__action"
                                                        data-key={3}
                                                        data-label=""
                                                        isVisible={true}
                                                        key="col-3-row-2"
                                                        style={
                                                          Object {
                                                            "paddingRight": 0,
                                                          }
                                                        }
                                                      >
                                                        <Td
                                                          className="pf-c-table__action"
                                                          component="td"
                                                          data-key={3}
                                                          dataLabel={null}
                                                          onMouseEnter={[Function]}
                                                          style={
                                                            Object {
                                                              "paddingRight": 0,
                                                            }
                                                          }
                                                          textCenter={false}
                                                        >
                                                          <TdBase
                                                            className="pf-c-table__action"
                                                            component="td"
                                                            data-key={3}
                                                            dataLabel={null}
                                                            innerRef={null}
                                                            onMouseEnter={[Function]}
                                                            style={
                                                              Object {
                                                                "paddingRight": 0,
                                                              }
                                                            }
                                                            textCenter={false}
                                                          >
                                                            <td
                                                              className="pf-c-table__action"
                                                              data-key={3}
                                                              data-label={null}
                                                              onMouseEnter={[Function]}
                                                              style={
                                                                Object {
                                                                  "paddingRight": 0,
                                                                }
                                                              }
                                                            >
                                                              <ActionsColumn
                                                                dropdownDirection="down"
                                                                dropdownPosition="right"
                                                                extraData={
                                                                  Object {
                                                                    "column": Object {
                                                                      "cell": Object {
                                                                        "formatters": Array [
                                                                          [Function],
                                                                        ],
                                                                        "transforms": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "data": undefined,
                                                                      "extraParams": Object {
                                                                        "actionResolver": [Function],
                                                                        "actions": undefined,
                                                                        "actionsToggle": undefined,
                                                                        "allRowsExpanded": false,
                                                                        "allRowsSelected": false,
                                                                        "areActionsDisabled": undefined,
                                                                        "canCollapseAll": false,
                                                                        "canSelectAll": true,
                                                                        "canSortFavorites": true,
                                                                        "collapseAllAriaLabel": "",
                                                                        "contentId": "expanded-content",
                                                                        "dropdownDirection": "down",
                                                                        "dropdownPosition": "right",
                                                                        "expandId": "expandable-toggle",
                                                                        "firstUserColumnIndex": 0,
                                                                        "isHeaderSelectDisabled": false,
                                                                        "onCollapse": undefined,
                                                                        "onExpand": undefined,
                                                                        "onFavorite": undefined,
                                                                        "onRowEdit": undefined,
                                                                        "onSelect": undefined,
                                                                        "onSort": undefined,
                                                                        "rowLabeledBy": "simple-node",
                                                                        "selectVariant": "checkbox",
                                                                        "sortBy": undefined,
                                                                      },
                                                                      "header": Object {
                                                                        "formatters": Array [],
                                                                        "label": "",
                                                                        "transforms": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "property": "column-3",
                                                                      "props": Object {
                                                                        "data-key": 3,
                                                                        "data-label": "",
                                                                      },
                                                                    },
                                                                    "columnIndex": 3,
                                                                    "property": "column-3",
                                                                    "rowIndex": 2,
                                                                  }
                                                                }
                                                                items={
                                                                  Array [
                                                                    Object {
                                                                      "component": "button",
                                                                      "onClick": [Function],
                                                                      "title": "Disable",
                                                                    },
                                                                  ]
                                                                }
                                                                rowData={
                                                                  Object {
                                                                    "cells": Array [
                                                                      <React.Fragment>
                                                                        <ForwardRef(Link)
                                                                          to={
                                                                            Object {
                                                                              "pathname": "/rulebooks/rulebook/3",
                                                                            }
                                                                          }
                                                                        >
                                                                          RuleBook 3
                                                                        </ForwardRef(Link)>
                                                                      </React.Fragment>,
                                                                      undefined,
                                                                      undefined,
                                                                    ],
                                                                    "fire-count": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "id": "3",
                                                                    "isExpanded": undefined,
                                                                    "isFirst": false,
                                                                    "isFirstVisible": false,
                                                                    "isHeightAuto": false,
                                                                    "isLast": true,
                                                                    "isLastVisible": true,
                                                                    "name": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "children": <ForwardRef(Link)
                                                                          to={
                                                                            Object {
                                                                              "pathname": "/rulebooks/rulebook/3",
                                                                            }
                                                                          }
                                                                        >
                                                                          RuleBook 3
                                                                        </ForwardRef(Link)>,
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "number-of-rulesets": Object {
                                                                      "formatters": Array [],
                                                                      "props": Object {
                                                                        "isVisible": true,
                                                                      },
                                                                      "title": undefined,
                                                                    },
                                                                    "secretTableRowKeyId": "3",
                                                                  }
                                                                }
                                                              >
                                                                <Dropdown
                                                                  direction="down"
                                                                  dropdownItems={
                                                                    Array [
                                                                      <DropdownItem
                                                                        component="button"
                                                                        data-key={0}
                                                                        onClick={[Function]}
                                                                      >
                                                                        Disable
                                                                      </DropdownItem>,
                                                                    ]
                                                                  }
                                                                  isOpen={false}
                                                                  isPlain={true}
                                                                  position="right"
                                                                  toggle={
                                                                    <KebabToggle
                                                                      onToggle={[Function]}
                                                                    />
                                                                  }
                                                                >
                                                                  <DropdownWithContext
                                                                    autoFocus={true}
                                                                    className=""
                                                                    direction="down"
                                                                    dropdownItems={
                                                                      Array [
                                                                        <DropdownItem
                                                                          component="button"
                                                                          data-key={0}
                                                                          onClick={[Function]}
                                                                        >
                                                                          Disable
                                                                        </DropdownItem>,
                                                                      ]
                                                                    }
                                                                    isFlipEnabled={false}
                                                                    isGrouped={false}
                                                                    isOpen={false}
                                                                    isPlain={true}
                                                                    isText={false}
                                                                    menuAppendTo="inline"
                                                                    onSelect={[Function]}
                                                                    position="right"
                                                                    toggle={
                                                                      <KebabToggle
                                                                        onToggle={[Function]}
                                                                      />
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="pf-c-dropdown pf-m-align-right"
                                                                      data-ouia-component-id="OUIA-Generated-Dropdown-3"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe={true}
                                                                    >
                                                                      <KebabToggle
                                                                        aria-haspopup={true}
                                                                        getMenuRef={[Function]}
                                                                        id="pf-dropdown-toggle-id-5"
                                                                        isOpen={false}
                                                                        isPlain={true}
                                                                        isText={false}
                                                                        key=".0"
                                                                        onEnter={[Function]}
                                                                        onToggle={[Function]}
                                                                        parentRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="pf-c-dropdown pf-m-align-right"
                                                                              data-ouia-component-id="OUIA-Generated-Dropdown-3"
                                                                              data-ouia-component-type="PF4/Dropdown"
                                                                              data-ouia-safe="true"
                                                                            >
                                                                              <button
                                                                                aria-expanded="false"
                                                                                aria-haspopup="true"
                                                                                aria-label="Actions"
                                                                                class="pf-c-dropdown__toggle pf-m-plain"
                                                                                id="pf-dropdown-toggle-id-5"
                                                                                type="button"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  fill="currentColor"
                                                                                  height="1em"
                                                                                  role="img"
                                                                                  style="vertical-align: -0.125em;"
                                                                                  viewBox="0 0 192 512"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                  />
                                                                                </svg>
                                                                              </button>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Toggle
                                                                          aria-haspopup={true}
                                                                          aria-label="Actions"
                                                                          bubbleEvent={false}
                                                                          className=""
                                                                          getMenuRef={[Function]}
                                                                          id="pf-dropdown-toggle-id-5"
                                                                          isActive={false}
                                                                          isDisabled={false}
                                                                          isOpen={false}
                                                                          isPlain={true}
                                                                          isPrimary={false}
                                                                          isSplitButton={false}
                                                                          isText={false}
                                                                          onEnter={[Function]}
                                                                          onToggle={[Function]}
                                                                          parentRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="pf-c-dropdown pf-m-align-right"
                                                                                data-ouia-component-id="OUIA-Generated-Dropdown-3"
                                                                                data-ouia-component-type="PF4/Dropdown"
                                                                                data-ouia-safe="true"
                                                                              >
                                                                                <button
                                                                                  aria-expanded="false"
                                                                                  aria-haspopup="true"
                                                                                  aria-label="Actions"
                                                                                  class="pf-c-dropdown__toggle pf-m-plain"
                                                                                  id="pf-dropdown-toggle-id-5"
                                                                                  type="button"
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    fill="currentColor"
                                                                                    height="1em"
                                                                                    role="img"
                                                                                    style="vertical-align: -0.125em;"
                                                                                    viewBox="0 0 192 512"
                                                                                    width="1em"
                                                                                  >
                                                                                    <path
                                                                                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                    />
                                                                                  </svg>
                                                                                </button>
                                                                              </div>,
                                                                            }
                                                                          }
                                                                        >
                                                                          <button
                                                                            aria-expanded={false}
                                                                            aria-haspopup={true}
                                                                            aria-label="Actions"
                                                                            className="pf-c-dropdown__toggle pf-m-plain"
                                                                            disabled={false}
                                                                            id="pf-dropdown-toggle-id-5"
                                                                            onClick={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            type="button"
                                                                          >
                                                                            <EllipsisVIcon
                                                                              color="currentColor"
                                                                              noVerticalAlign={false}
                                                                              size="sm"
                                                                            >
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                aria-labelledby={null}
                                                                                fill="currentColor"
                                                                                height="1em"
                                                                                role="img"
                                                                                style={
                                                                                  Object {
                                                                                    "verticalAlign": "-0.125em",
                                                                                  }
                                                                                }
                                                                                viewBox="0 0 192 512"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                                />
                                                                              </svg>
                                                                            </EllipsisVIcon>
                                                                          </button>
                                                                        </Toggle>
                                                                      </KebabToggle>
                                                                    </div>
                                                                  </DropdownWithContext>
                                                                </Dropdown>
                                                              </ActionsColumn>
                                                            </td>
                                                          </TdBase>
                                                        </Td>
                                                      </BodyCell>
                                                    </tr>
                                                  </TrBase>
                                                </Tr>
                                              </RowWrapper>
                                            </BodyRow>
                                          </tbody>
                                        </TbodyBase>
                                      </Tbody>
                                    </BodyWrapper>
                                  </BaseBody>
                                </Body>
                              </ContextBody>
                            </TableBody>
                          </table>
                        </TableComposableBase>
                      </TableComposable>
                    </Provider>
                  </Table>
                </TableToolbarView>
              </section>
            </PageSection>
          </RuleBooks>
        </Route>
      </Router>
    </MemoryRouter>
  </IntlProvider>
</ComponentWrapper>
`;
